{
    "problem_id": "2917",
    "solved": true,
    "problem_text": "Find T Q.",
    "logic_forms": [
        "PointLiesOnLine(Q, Line(S, A))",
        "PointLiesOnLine(S, Line(R, T))",
        "Perpendicular(Line(Q, S), Line(T, S))",
        "Equals(LengthOf(Line(T, Q)), 2x-6)",
        "Equals(LengthOf(Line(Q, R)), x+3)",
        "Equals(LengthOf(Line(R, S)), 7)",
        "Equals(LengthOf(Line(T, S)), 7)",
        "Find(LengthOf(Line(T,Q)))"
    ],
    "point_instances": [
        "Q",
        "S",
        "R",
        "T",
        "A"
    ],
    "line_instances": [
        "SQ",
        "SA",
        "QA",
        "RS",
        "RT",
        "ST",
        "TQ",
        "RQ"
    ],
    "circle_instances": [],
    "point_positions": {
        "Q": [
            303.2692307692308,
            301.9230769230769
        ],
        "S": [
            304.71153846153845,
            109.61538461538461
        ],
        "R": [
            144.6153846153846,
            109.13461538461539
        ],
        "T": [
            462.88461538461536,
            108.65384615384615
        ],
        "A": [
            303.75,
            398.07692307692304
        ]
    },
    "problem_choices": [
        "6",
        "7",
        "12",
        "18"
    ],
    "choices_precise_value": [
        6.0,
        7.0,
        12.0,
        18.0
    ],
    "problem_answer": 12.0,
    "total_time": 56.806651,
    "solution_predicate": "Equals(12.0, LengthOf(Line(T, Q)))",
    "proof": "Step 1:\nTheorem: Known facts\nPremises : start\nConclusions: cos(\u2220STQ), 2 * x - 6 = QT, QS, \u2220TQS, ST, 7 = ST, 3 + x = QR, QT, \u2220STQ, QS \u22a5 RS, QS \u22a5 ST, 7 = RS\n\nStep 2:\nTheorem: Definition of Triangle\nPremises : QS, ST, QT\nConclusions: \u25b3QST\n\nStep 3:\nTheorem: Perpendicular to Right Angle\nPremises : QS \u22a5 RS\nConclusions: pi / 2 = \u2220RSQ\n\nStep 4:\nTheorem: Angle Cos Definition\nPremises : QS \u22a5 ST, cos(\u2220STQ)\nConclusions: ST / QT = cos(\u2220STQ)\n\nStep 5:\nTheorem: Perpendicular to Right Angle\nPremises : QS \u22a5 ST\nConclusions: pi / 2 = \u2220QST\n\nStep 6:\nTheorem: Transtivity of Equivalence\nPremises : 7 = RS, 7 = ST\nConclusions: RS = ST\n\nStep 7:\nTheorem: Sin Function Definition\nPremises : QS \u22a5 ST, \u2220TQS, \u25b3QST\nConclusions: ST / QT = sin(\u2220TQS)\n\nStep 8:\nTheorem: Cos Function Definition\nPremises : QS \u22a5 ST, \u2220STQ, \u25b3QST\nConclusions: ST / QT = cos(\u2220STQ)\n\nStep 9:\nTheorem: Substitution\nPremises : ST / QT = cos(\u2220STQ), 7 = ST, 2 * x - 6 = QT\nConclusions: 7 / (2 * x - 6) = cos(\u2220STQ)\n\nStep 10:\nTheorem: Transtivity of Equivalence\nPremises : pi / 2 = \u2220QST, pi / 2 = \u2220RSQ\nConclusions: \u2220QST = \u2220RSQ\n\nStep 11:\nTheorem: Transtivity of Equivalence\nPremises : ST / QT = cos(\u2220STQ), 7 / (2 * x - 6) = cos(\u2220STQ)\nConclusions: 7 / (2 * x - 6) = ST / QT\n\nStep 12:\nTheorem: Side-Angle-Side Congruent Theorem\nPremises : RS = ST, \u2220QST = \u2220RSQ\nConclusions: \u25b3QRS \u2245 \u25b3QTS\n\nStep 13:\nTheorem: Transtivity of Equivalence\nPremises : ST / QT = sin(\u2220TQS), 7 / (2 * x - 6) = ST / QT\nConclusions: 7 / (2 * x - 6) = sin(\u2220TQS)\n\nStep 14:\nTheorem: Congruent Definition\nPremises : \u25b3QRS \u2245 \u25b3QTS\nConclusions: QR = QT, RS = ST\n\nStep 15:\nTheorem: Transtivity of Equivalence\nPremises : QR = QT, 3 + x = QR, 2 * x - 6 = QT\nConclusions: 3 + x = 2 * x - 6\n\nStep 16:\nTheorem: Transtivity of Equivalence\nPremises : 3 + x = 2 * x - 6, 2 * x - 6 = QT\nConclusions: 3 + x = QT\n\nStep 17:\nTheorem: Substitution\nPremises : ST / QT = sin(\u2220TQS), 7 = ST, 3 + x = QT\nConclusions: 7 / (3 + x) = sin(\u2220TQS)\n\nStep 18:\nTheorem: Transtivity of Equivalence\nPremises : 7 / (3 + x) = sin(\u2220TQS), 7 / (2 * x - 6) = sin(\u2220TQS)\nConclusions: 7 / (3 + x) = 7 / (2 * x - 6)\n\nStep 19:\nTheorem: Solve Linear Equation System\nPremises : 3 + x = QT, 7 / (3 + x) = 7 / (2 * x - 6)\nConclusions: 12 = QT\n\n",
    "logic_fomrs_refined": [
        "Line(S, Q)",
        "Line(S, A)",
        "Line(Q, A)",
        "Line(R, S)",
        "Line(R, T)",
        "Line(S, T)",
        "Line(T, Q)",
        "Line(R, Q)",
        "PointLiesOnLine(Q, Line(S, A))",
        "PointLiesOnLine(S, Line(R, T))",
        "Perpendicular(Line(Q, S), Line(T, S))",
        "Equals(LengthOf(Line(T, Q)), Sub(Mul(2.0, x), 6.0))",
        "Equals(LengthOf(Line(Q, R)), Add(x, 3.0))",
        "Equals(LengthOf(Line(R, S)), 7.0)",
        "Equals(LengthOf(Line(T, S)), 7.0)"
    ],
    "correct": true
}