{
    "problem_id": "2720",
    "solved": true,
    "problem_text": "Use rectangle L M N P, parallelogram L K M J to solve the problem. If L N = 10, L J = 2 x + 1, and P J = 3 x - 1, find x.",
    "logic_forms": [
        "PointLiesOnLine(J, Line(L, N))",
        "PointLiesOnLine(J, Line(P, M))",
        "Rectangle(L,M,N,P)",
        "Parallelogram(L,K,M,J)",
        "Equals(LengthOf(Line(L,N)),10)",
        "Equals(LengthOf(Line(L,J)),2x+1)",
        "Equals(LengthOf(Line(P,J)),3x-1)",
        "Find(x)"
    ],
    "point_instances": [
        "J",
        "K",
        "P",
        "M",
        "L",
        "N"
    ],
    "line_instances": [
        "NM",
        "KM",
        "LK",
        "LM",
        "LJ",
        "LN",
        "JN",
        "PL",
        "PN",
        "PJ",
        "PM",
        "JM"
    ],
    "circle_instances": [],
    "point_positions": {
        "J": [
            117.72727272727272,
            110.38961038961038
        ],
        "K": [
            241.88311688311688,
            110.64935064935065
        ],
        "P": [
            57.467532467532465,
            34.285714285714285
        ],
        "M": [
            179.02597402597402,
            186.75324675324674
        ],
        "L": [
            179.54545454545453,
            34.8051948051948
        ],
        "N": [
            56.94805194805194,
            185.97402597402598
        ]
    },
    "problem_choices": [
        "2",
        "4",
        "5",
        "10"
    ],
    "choices_precise_value": [
        2.0,
        4.0,
        5.0,
        10.0
    ],
    "problem_answer": 2.0,
    "total_time": 111.323052,
    "solution_predicate": "Equals(2.0, x)",
    "proof": "Step 1:\nTheorem: Known facts\nPremises : start\nConclusions: 1 + 2 * x = JL, J on LN, Rectangle(L, M, N, P), 10 = LN, Parallelogram(J, L, K, M), J on MP\n\nStep 2:\nTheorem: Line Segment Split\nPremises : J on LN\nConclusions: LN = JL + JN\n\nStep 3:\nTheorem: Rectangle is Parallelogram\nPremises : Rectangle(L, M, N, P)\nConclusions: Parallelogram(L, M, N, P)\n\nStep 4:\nTheorem: Parallelogram Opposite Lines Equal\nPremises : Parallelogram(J, L, K, M)\nConclusions: JL = KM\n\nStep 5:\nTheorem: Transtivity of Equivalence\nPremises : 10 = LN, LN = JL + JN\nConclusions: 10 = JL + JN\n\nStep 6:\nTheorem: Parallelogram Diagonals Bisect\nPremises : Parallelogram(L, M, N, P), J on LN, J on MP\nConclusions: JL = JN\n\nStep 7:\nTheorem: Transtivity of Equivalence\nPremises : 1 + 2 * x = JL, JL = KM\nConclusions: 1 + 2 * x = KM\n\nStep 8:\nTheorem: Transtivity of Equivalence\nPremises : JL = JN, JL = KM\nConclusions: JN = KM\n\nStep 9:\nTheorem: Transtivity of Equivalence\nPremises : JN = KM, 1 + 2 * x = KM\nConclusions: 1 + 2 * x = JN\n\nStep 10:\nTheorem: Solve Linear Equation System\nPremises : 1 + 2 * x = JN, 10 = JL + JN, 1 + 2 * x = JL\nConclusions: 2 = x\n\n",
    "logic_fomrs_refined": [
        "Line(N, M)",
        "Line(K, M)",
        "Line(L, K)",
        "Line(L, M)",
        "Line(L, J)",
        "Line(L, N)",
        "Line(J, N)",
        "Line(P, L)",
        "Line(P, N)",
        "Line(P, J)",
        "Line(P, M)",
        "Line(J, M)",
        "PointLiesOnLine(J, Line(L, N))",
        "PointLiesOnLine(J, Line(P, M))",
        "Rectangle(L, M, N, P)",
        "Parallelogram(L, K, M, J)",
        "Equals(LengthOf(Line(L, N)), 10.0)",
        "Equals(LengthOf(Line(L, J)), Add(Mul(2.0, x), 1.0))",
        "Equals(LengthOf(Line(P, J)), Sub(Mul(3.0, x), 1.0))"
    ],
    "correct": true
}