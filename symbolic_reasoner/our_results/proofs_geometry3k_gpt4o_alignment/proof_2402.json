{
    "problem_id": "2402",
    "solved": true,
    "problem_text": "Circle O has a radius of 13 inches. Radius O B is perpendicular to chord C D which is 24 inches long. Find O X.",
    "logic_forms": [
        "Equals(LengthOf(Line(C, D)), 24)",
        "Equals(LengthOf(Line(O, B)), 13)",
        "Equals(RadiusOf(Circle(O)), 13)",
        "Find(LengthOf(Line(O, X)))",
        "IsChordOf(Line(C, D), Circle(O))",
        "Perpendicular(Line(B, X), Line(D, X))",
        "Perpendicular(Line(O, B), Line(C, D))",
        "PointLiesOnCircle(B, Circle(O, radius_0_0))",
        "PointLiesOnCircle(C, Circle(O, radius_0_0))",
        "PointLiesOnCircle(D, Circle(O, radius_0_0))",
        "PointLiesOnLine(X, Line(B, O))",
        "PointLiesOnLine(X, Line(C, D))"
    ],
    "point_instances": [
        "X",
        "B",
        "O",
        "C",
        "D"
    ],
    "line_instances": [
        "BX",
        "BO",
        "XO",
        "CO",
        "CX",
        "CD",
        "XD"
    ],
    "circle_instances": [
        "O"
    ],
    "point_positions": {
        "X": [
            176.30481283422458,
            98.93048128342245
        ],
        "B": [
            196.62566844919786,
            60.695187165775394
        ],
        "O": [
            157.05347593582886,
            137.4331550802139
        ],
        "C": [
            108.1229946524064,
            64.70588235294117
        ],
        "D": [
            243.68449197860963,
            133.4224598930481
        ]
    },
    "problem_choices": [
        "5",
        "12",
        "13",
        "26"
    ],
    "choices_precise_value": [
        5.0,
        12.0,
        13.0,
        26.0
    ],
    "problem_answer": 5.0,
    "total_time": 60.927598,
    "solution_predicate": "Equals(5.0, LengthOf(Line(O, X)))",
    "proof": "Step 1:\nTheorem: Known facts\nPremises : start\nConclusions: \u2220OCX, CO, OX, X on CD, \u2220OCD, CX, 24 = CD, 13 = radius_0_0, CD, C on \u2299(O, radius_0_0), DO, D on \u2299(O, radius_0_0), CX \u22a5 OX\n\nStep 2:\nTheorem: Same Angle\nPremises : \u2220OCD, X on CD\nConclusions: \u2220OCD = \u2220OCX\n\nStep 3:\nTheorem: Definition of Triangle\nPremises : CO, CX, OX\nConclusions: \u25b3COX\n\nStep 4:\nTheorem: Point On Circle Def\nPremises : C on \u2299(O, radius_0_0)\nConclusions: radius_0_0 = CO\n\nStep 5:\nTheorem: Definition of Triangle\nPremises : CO, DO, CD\nConclusions: \u25b3CDO\n\nStep 6:\nTheorem: Point On Circle Def\nPremises : D on \u2299(O, radius_0_0)\nConclusions: radius_0_0 = DO\n\nStep 7:\nTheorem: Sin Function Definition\nPremises : CX \u22a5 OX, \u2220OCX, \u25b3COX\nConclusions: OX / CO = sin(\u2220OCX)\n\nStep 8:\nTheorem: Transtivity of Equivalence\nPremises : 13 = radius_0_0, radius_0_0 = CO\nConclusions: 13 = CO\n\nStep 9:\nTheorem: Law of Cosines\nPremises : \u25b3CDO\nConclusions: (CD ** 2 + CO ** 2) - DO ** 2 = 2 * CD * CO * cos(\u2220OCD)\n\nStep 10:\nTheorem: Transtivity of Equivalence\nPremises : 13 = radius_0_0, radius_0_0 = DO\nConclusions: 13 = DO\n\nStep 11:\nTheorem: Substitution\nPremises : 13 = CO, (CD ** 2 + CO ** 2) - DO ** 2 = 2 * CD * CO * cos(\u2220OCD), 24 = CD, 13 = DO, \u2220OCD = \u2220OCX\nConclusions: (13 ** 2 + 24 ** 2) - 13 ** 2 = 13 * 2 * 24 * cos(\u2220OCX)\n\nStep 12:\nTheorem: Solve Univariate Equation\nPremises : (13 ** 2 + 24 ** 2) - 13 ** 2 = 13 * 2 * 24 * cos(\u2220OCX)\nConclusions: 0.39 = \u2220OCX\n\nStep 13:\nTheorem: Substitution\nPremises : 0.39 = \u2220OCX, 13 = CO, OX / CO = sin(\u2220OCX)\nConclusions: sin(0.39) = OX / 13\n\nStep 14:\nTheorem: Solve Linear Equation System\nPremises : sin(0.39) = OX / 13\nConclusions: 5 = OX\n\n",
    "logic_fomrs_refined": [
        "Line(B, X)",
        "Line(B, O)",
        "Line(X, O)",
        "Line(C, O)",
        "Line(C, X)",
        "Line(C, D)",
        "Line(X, D)",
        "Circle(O, radius_0_0)",
        "IsChordOf(Line(C, D), Circle(O, radius_0_0))",
        "Perpendicular(Line(B, X), Line(D, X))",
        "Perpendicular(Line(O, B), Line(C, D))",
        "PointLiesOnCircle(B, Circle(O, radius_0_0))",
        "PointLiesOnCircle(C, Circle(O, radius_0_0))",
        "PointLiesOnCircle(D, Circle(O, radius_0_0))",
        "PointLiesOnLine(X, Line(B, O))",
        "PointLiesOnLine(X, Line(C, D))",
        "Equals(LengthOf(Line(C, D)), 24.0)",
        "Equals(LengthOf(Line(O, B)), 13.0)",
        "Equals(radius_0_0, 13.0)"
    ],
    "correct": true
}