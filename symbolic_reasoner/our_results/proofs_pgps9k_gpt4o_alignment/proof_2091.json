{
    "problem_id": "2091",
    "solved": true,
    "problem_text": "Find the area of the shaded region.",
    "logic_forms": [
        "Equals(LengthOf(Line(A, C)), LengthOf(Line(A, B)))",
        "Equals(LengthOf(Line(B, E)), LengthOf(Line(A, B)))",
        "Equals(LengthOf(Line(B, E)), LengthOf(Line(A, C)))",
        "Equals(LengthOf(Line(B, E)), LengthOf(Line(C, F)))",
        "Equals(LengthOf(Line(B, E)), LengthOf(Line(E, G)))",
        "Equals(LengthOf(Line(B, E)), LengthOf(Line(F, G)))",
        "Equals(LengthOf(Line(C, F)), LengthOf(Line(A, B)))",
        "Equals(LengthOf(Line(C, F)), LengthOf(Line(A, C)))",
        "Equals(LengthOf(Line(E, D)), 7)",
        "Equals(LengthOf(Line(E, G)), LengthOf(Line(A, B)))",
        "Equals(LengthOf(Line(E, G)), LengthOf(Line(A, C)))",
        "Equals(LengthOf(Line(E, G)), LengthOf(Line(C, F)))",
        "Equals(LengthOf(Line(E, G)), LengthOf(Line(F, G)))",
        "Equals(LengthOf(Line(F, G)), LengthOf(Line(A, B)))",
        "Equals(LengthOf(Line(F, G)), LengthOf(Line(A, C)))",
        "Equals(LengthOf(Line(F, G)), LengthOf(Line(C, F)))",
        "Equals(MeasureOf(Angle(A, B, E)), MeasureOf(Angle(C, A, B)))",
        "Equals(MeasureOf(Angle(A, B, E)), MeasureOf(Angle(E, G, F)))",
        "Equals(MeasureOf(Angle(A, B, E)), MeasureOf(Angle(F, C, A)))",
        "Equals(MeasureOf(Angle(A, B, E)), MeasureOf(Angle(G, E, B)))",
        "Equals(MeasureOf(Angle(A, B, E)), MeasureOf(Angle(G, F, C)))",
        "Equals(MeasureOf(Angle(E, G, F)), MeasureOf(Angle(C, A, B)))",
        "Equals(MeasureOf(Angle(E, G, F)), MeasureOf(Angle(F, C, A)))",
        "Equals(MeasureOf(Angle(E, G, F)), MeasureOf(Angle(G, F, C)))",
        "Equals(MeasureOf(Angle(F, C, A)), MeasureOf(Angle(C, A, B)))",
        "Equals(MeasureOf(Angle(G, E, B)), MeasureOf(Angle(C, A, B)))",
        "Equals(MeasureOf(Angle(G, E, B)), MeasureOf(Angle(E, G, F)))",
        "Equals(MeasureOf(Angle(G, E, B)), MeasureOf(Angle(F, C, A)))",
        "Equals(MeasureOf(Angle(G, E, B)), MeasureOf(Angle(G, F, C)))",
        "Equals(MeasureOf(Angle(G, F, C)), MeasureOf(Angle(C, A, B)))",
        "Equals(MeasureOf(Angle(G, F, C)), MeasureOf(Angle(F, C, A)))",
        "Find(Sub(AreaOf(Circle(D)), AreaOf(Regular(Polygon(A, B, C, E, F, G)))))",
        "Line(A, B)",
        "Line(A, C)",
        "Line(B, E)",
        "Line(C, F)",
        "Line(D, E)",
        "Line(E, G)",
        "Line(F, G)",
        "PointLiesOnCircle(A, Circle(D))",
        "PointLiesOnCircle(B, Circle(D))",
        "PointLiesOnCircle(C, Circle(D))",
        "PointLiesOnCircle(E, Circle(D))",
        "PointLiesOnCircle(F, Circle(D))",
        "PointLiesOnCircle(G, Circle(D))"
    ],
    "point_instances": [
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G"
    ],
    "line_instances": [
        "EG",
        "GF",
        "FC",
        "CA",
        "AB",
        "BE",
        "ED"
    ],
    "circle_instances": [
        "D"
    ],
    "point_positions": {
        "A": [
            87.24285714285713,
            39.706811797752806
        ],
        "B": [
            215.05142857142857,
            39.640449438202246
        ],
        "C": [
            23.341176470588234,
            150.73364177131526
        ],
        "D": [
            151.15224290088528,
            150.28348180212595
        ],
        "E": [
            279.29523809523806,
            150.42134831460675
        ],
        "F": [
            87.68571428571428,
            261.0252808988764
        ],
        "G": [
            215.52380952380952,
            260.96629213483146
        ]
    },
    "problem_choices": [
        26.632,
        37.434,
        55.938,
        127.306
    ],
    "choices_precise_value": [
        26.632,
        37.434,
        55.938,
        127.306
    ],
    "problem_answer": 26.632,
    "total_time": 245.485419,
    "solution_predicate": "Equals(26.6323056698, Sub(AreaOf(Circle(D, radius_D)), AreaOf(Regular(Hexagon(A, B, E, G, F, C)))))",
    "proof": "Step 1:\nTheorem: Known facts\nPremises : start\nConclusions: Area(\u2299(D, radius_D)), 7 = DE, A on \u2299(D, radius_D), E on \u2299(D, radius_D), 3.14 = pi, Hexagon(A, B, E, G, F, C)\n\nStep 2:\nTheorem: Circle Area Formula\nPremises : Area(\u2299(D, radius_D))\nConclusions: pi * radius_D ** 2 = Area(\u2299(D, radius_D))\n\nStep 3:\nTheorem: Point On Circle Def\nPremises : A on \u2299(D, radius_D)\nConclusions: radius_D = AD\n\nStep 4:\nTheorem: Point On Circle Def\nPremises : E on \u2299(D, radius_D)\nConclusions: radius_D = DE\n\nStep 5:\nTheorem: Regular Hexagon(A, B, E, G, F, C) Area formula by formula 2\nPremises : Hexagon(A, B, E, G, F, C)\nConclusions: Area(Regular(Hexagon(A, B, E, G, F, C))) = (6 * sin(2 * (pi / 6)) * AD ** 2) / 2\n\nStep 6:\nTheorem: Transtivity of Equivalence\nPremises : radius_D = DE, 7 = DE\nConclusions: 7 = radius_D\n\nStep 7:\nTheorem: Evaluate\nPremises : 7 = radius_D, 3.14 = pi\nConclusions: 153.94 = pi * radius_D ** 2\n\nStep 8:\nTheorem: Transtivity of Equivalence\nPremises : radius_D = AD, 7 = radius_D\nConclusions: 7 = AD\n\nStep 9:\nTheorem: Transtivity of Equivalence\nPremises : pi * radius_D ** 2 = Area(\u2299(D, radius_D)), 153.94 = pi * radius_D ** 2\nConclusions: 153.94 = Area(\u2299(D, radius_D))\n\nStep 10:\nTheorem: Evaluate\nPremises : 7 = AD, 3.14 = pi\nConclusions: 127.31 = (6 * sin(2 * (pi / 6)) * AD ** 2) / 2\n\nStep 11:\nTheorem: Transtivity of Equivalence\nPremises : Area(Regular(Hexagon(A, B, E, G, F, C))) = (6 * sin(2 * (pi / 6)) * AD ** 2) / 2, 127.31 = (6 * sin(2 * (pi / 6)) * AD ** 2) / 2\nConclusions: 127.31 = Area(Regular(Hexagon(A, B, E, G, F, C)))\n\nStep 12:\nTheorem: Evaluate\nPremises : 153.94 = Area(\u2299(D, radius_D)), 127.31 = Area(Regular(Hexagon(A, B, E, G, F, C)))\nConclusions: 26.63 = Area(\u2299(D, radius_D)) - Area(Regular(Hexagon(A, B, E, G, F, C)))\n\n",
    "logic_fomrs_refined": [
        "Line(E, G)",
        "Line(G, F)",
        "Line(F, C)",
        "Line(C, A)",
        "Line(A, B)",
        "Line(B, E)",
        "Line(E, D)",
        "Circle(D, radius_D)",
        "Line(A, B)",
        "Line(A, C)",
        "Line(B, E)",
        "Line(C, F)",
        "Line(D, E)",
        "Line(E, G)",
        "Line(F, G)",
        "PointLiesOnCircle(A, Circle(D, radius_D))",
        "PointLiesOnCircle(B, Circle(D, radius_D))",
        "PointLiesOnCircle(C, Circle(D, radius_D))",
        "PointLiesOnCircle(E, Circle(D, radius_D))",
        "PointLiesOnCircle(F, Circle(D, radius_D))",
        "PointLiesOnCircle(G, Circle(D, radius_D))",
        "Equals(LengthOf(Line(A, C)), LengthOf(Line(A, B)))",
        "Equals(LengthOf(Line(B, E)), LengthOf(Line(A, B)))",
        "Equals(LengthOf(Line(B, E)), LengthOf(Line(A, C)))",
        "Equals(LengthOf(Line(B, E)), LengthOf(Line(C, F)))",
        "Equals(LengthOf(Line(B, E)), LengthOf(Line(E, G)))",
        "Equals(LengthOf(Line(B, E)), LengthOf(Line(F, G)))",
        "Equals(LengthOf(Line(C, F)), LengthOf(Line(A, B)))",
        "Equals(LengthOf(Line(C, F)), LengthOf(Line(A, C)))",
        "Equals(LengthOf(Line(E, D)), 7.0)",
        "Equals(LengthOf(Line(E, G)), LengthOf(Line(A, B)))",
        "Equals(LengthOf(Line(E, G)), LengthOf(Line(A, C)))",
        "Equals(LengthOf(Line(E, G)), LengthOf(Line(C, F)))",
        "Equals(LengthOf(Line(E, G)), LengthOf(Line(F, G)))",
        "Equals(LengthOf(Line(F, G)), LengthOf(Line(A, B)))",
        "Equals(LengthOf(Line(F, G)), LengthOf(Line(A, C)))",
        "Equals(LengthOf(Line(F, G)), LengthOf(Line(C, F)))",
        "Equals(MeasureOf(Angle(A, B, E)), MeasureOf(Angle(C, A, B)))",
        "Equals(MeasureOf(Angle(A, B, E)), MeasureOf(Angle(E, G, F)))",
        "Equals(MeasureOf(Angle(A, B, E)), MeasureOf(Angle(F, C, A)))",
        "Equals(MeasureOf(Angle(A, B, E)), MeasureOf(Angle(B, E, G)))",
        "Equals(MeasureOf(Angle(A, B, E)), MeasureOf(Angle(G, F, C)))",
        "Equals(MeasureOf(Angle(E, G, F)), MeasureOf(Angle(C, A, B)))",
        "Equals(MeasureOf(Angle(E, G, F)), MeasureOf(Angle(F, C, A)))",
        "Equals(MeasureOf(Angle(E, G, F)), MeasureOf(Angle(G, F, C)))",
        "Equals(MeasureOf(Angle(F, C, A)), MeasureOf(Angle(C, A, B)))",
        "Equals(MeasureOf(Angle(B, E, G)), MeasureOf(Angle(C, A, B)))",
        "Equals(MeasureOf(Angle(B, E, G)), MeasureOf(Angle(E, G, F)))",
        "Equals(MeasureOf(Angle(B, E, G)), MeasureOf(Angle(F, C, A)))",
        "Equals(MeasureOf(Angle(B, E, G)), MeasureOf(Angle(G, F, C)))",
        "Equals(MeasureOf(Angle(G, F, C)), MeasureOf(Angle(C, A, B)))",
        "Equals(MeasureOf(Angle(G, F, C)), MeasureOf(Angle(F, C, A)))"
    ],
    "correct": true
}