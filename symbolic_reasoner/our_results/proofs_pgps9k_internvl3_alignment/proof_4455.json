{
    "problem_id": "4455",
    "solved": true,
    "problem_text": "If WXYZ is a kite, find WX.",
    "logic_forms": [
        "Equals(LengthOf(Line(P, Y)), 24)",
        "Equals(LengthOf(Line(W, P)), 6)",
        "Equals(LengthOf(Line(X, P)), 8)",
        "Equals(LengthOf(Line(X, P)), LengthOf(Line(Z, P)))",
        "Equals(LengthOf(Line(Z, P)), 8)",
        "Line(P, Y)",
        "Line(P, Z)",
        "Line(W, P)",
        "Line(W, Y)",
        "Line(W, Z)",
        "Line(X, P)",
        "Line(X, W)",
        "Line(X, Y)",
        "Line(X, Z)",
        "Line(Z, Y)",
        "PointLiesOnLine(P, Line(W, Y))",
        "PointLiesOnLine(P, Line(X, Z))",
        "Kite(W,X,Y,Z)",
        "Find(LengthOf(Line(W,X)))"
    ],
    "point_instances": [
        "Z",
        "W",
        "X",
        "P",
        "Y"
    ],
    "line_instances": [
        "WP",
        "WY",
        "PY",
        "XP",
        "XZ",
        "PZ",
        "ZY",
        "WZ",
        "WX",
        "XY"
    ],
    "circle_instances": [],
    "point_positions": {
        "Z": [
            139.03823024054984,
            209.66666666666666
        ],
        "W": [
            78.82025997310623,
            130.3686956521739
        ],
        "X": [
            138.75210871602624,
            54.82727272727273
        ],
        "P": [
            138.4828178694158,
            130.36333333333332
        ],
        "Y": [
            349.47512326311073,
            130.3686956521739
        ]
    },
    "problem_choices": [
        10.0,
        22.627,
        24.739,
        25.298
    ],
    "choices_precise_value": [
        10.0,
        22.627,
        24.739,
        25.298
    ],
    "problem_answer": 10.0,
    "total_time": 139.305245,
    "solution_predicate": "Equals(30.0, LengthOf(Line(W, X)))",
    "proof": "Step 1:\nTheorem: Known facts\nPremises : start\nConclusions: WY, 24 = PY, WX, 6 = PW, Kite(W, X, Y, Z), PX = PZ, P on WY, XY\n\nStep 2:\nTheorem: Evaluate\nPremises : 24 = PY, 6 = PW\nConclusions: 30 = PW + PY\n\nStep 3:\nTheorem: Kite has perpendicular diagonals\nPremises : Kite(W, X, Y, Z)\nConclusions: WY \u22a5 XZ\n\nStep 4:\nTheorem: Kite side equality\nPremises : Kite(W, X, Y, Z)\nConclusions: WY = YZ, WX = XY\n\nStep 5:\nTheorem: Line Segment Split\nPremises : P on WY\nConclusions: WY = PW + PY\n\nStep 6:\nTheorem: Definition of Triangle\nPremises : WX, XY, WY\nConclusions: \u25b3WXY\n\nStep 7:\nTheorem: Perpendicular Extension\nPremises : WY \u22a5 XZ\nConclusions: PX \u22a5 PY\n\nStep 8:\nTheorem: Transtivity of Equivalence\nPremises : WY = PW + PY, WY = YZ\nConclusions: YZ = PW + PY\n\nStep 9:\nTheorem: Issoceles Triangle Theorem\nPremises : WX = XY, \u25b3WXY\nConclusions: PW \u22a5 PX, PX \u22a5 PY\n\nStep 10:\nTheorem: Perpendicular to Right Angle\nPremises : PX \u22a5 PY\nConclusions: pi / 2 = \u2220YPX\n\nStep 11:\nTheorem: Transtivity of Equivalence\nPremises : YZ = PW + PY, 30 = PW + PY\nConclusions: 30 = YZ\n\nStep 12:\nTheorem: Perpendicular Extension\nPremises : PW \u22a5 PX\nConclusions: PY \u22a5 PZ\n\nStep 13:\nTheorem: Perpendicular to Right Angle\nPremises : PY \u22a5 PZ\nConclusions: pi / 2 = \u2220ZPY\n\nStep 14:\nTheorem: Transtivity of Equivalence\nPremises : pi / 2 = \u2220YPX, pi / 2 = \u2220ZPY\nConclusions: \u2220YPX = \u2220ZPY\n\nStep 15:\nTheorem: Side-Angle-Side Congruent Theorem\nPremises : \u2220YPX = \u2220ZPY, PX = PZ\nConclusions: \u25b3PXY \u2245 \u25b3PZY\n\nStep 16:\nTheorem: Congruent Definition\nPremises : \u25b3PXY \u2245 \u25b3PZY\nConclusions: PX = PZ, XY = YZ\n\nStep 17:\nTheorem: Transtivity of Equivalence\nPremises : 30 = YZ, XY = YZ\nConclusions: 30 = XY\n\nStep 18:\nTheorem: Transtivity of Equivalence\nPremises : 30 = XY, WX = XY\nConclusions: 30 = WX\n\n",
    "logic_fomrs_refined": [
        "Line(W, P)",
        "Line(W, Y)",
        "Line(P, Y)",
        "Line(X, P)",
        "Line(X, Z)",
        "Line(P, Z)",
        "Line(Z, Y)",
        "Line(W, Z)",
        "Line(W, X)",
        "Line(X, Y)",
        "Line(P, Y)",
        "Line(P, Z)",
        "Line(W, P)",
        "Line(W, Y)",
        "Line(W, Z)",
        "Line(X, P)",
        "Line(X, W)",
        "Line(X, Y)",
        "Line(X, Z)",
        "Line(Z, Y)",
        "PointLiesOnLine(P, Line(W, Y))",
        "PointLiesOnLine(P, Line(X, Z))",
        "Kite(W, X, Y, Z)",
        "Equals(LengthOf(Line(P, Y)), 24.0)",
        "Equals(LengthOf(Line(W, P)), 6.0)",
        "Equals(LengthOf(Line(X, P)), 8.0)",
        "Equals(LengthOf(Line(X, P)), LengthOf(Line(Z, P)))",
        "Equals(LengthOf(Line(Z, P)), 8.0)"
    ],
    "correct": false
}