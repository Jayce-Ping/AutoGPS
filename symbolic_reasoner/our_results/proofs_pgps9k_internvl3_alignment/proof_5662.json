{
    "problem_id": "5662",
    "solved": true,
    "problem_text": "The diameters of \\odot L and \\odot M are 20 and 13 units, respectively, and QR = 4. Determine the length of RM.",
    "logic_forms": [
        "Circle(L)",
        "Circle(M)",
        "Equals(DiameterOf(Circle(L)), 20)",
        "Equals(DiameterOf(Circle(M)), 13)",
        "Equals(LengthOf(Line(Q,R)), 4)",
        "Find(LengthOf(Line(R,M)))",
        "Line(L, M)",
        "Line(L, Q)",
        "Line(L, R)",
        "Line(L, S)",
        "Line(M, S)",
        "Line(P, L)",
        "Line(P, M)",
        "Line(P, Q)",
        "Line(P, R)",
        "Line(P, S)",
        "Line(Q, M)",
        "Line(Q, R)",
        "Line(Q, S)",
        "Line(R, M)",
        "Line(R, S)",
        "PointLiesOnCircle(A, Circle(L))",
        "PointLiesOnCircle(A, Circle(M))",
        "PointLiesOnCircle(B, Circle(L))",
        "PointLiesOnCircle(B, Circle(M))",
        "PointLiesOnCircle(P, Circle(L))",
        "PointLiesOnCircle(Q, Circle(M))",
        "PointLiesOnCircle(R, Circle(L))",
        "PointLiesOnCircle(S, Circle(M))",
        "PointLiesOnLine(L, Line(P, M))",
        "PointLiesOnLine(L, Line(P, Q))",
        "PointLiesOnLine(L, Line(P, R))",
        "PointLiesOnLine(L, Line(P, S))",
        "PointLiesOnLine(M, Line(L, S))",
        "PointLiesOnLine(M, Line(P, S))",
        "PointLiesOnLine(M, Line(Q, S))",
        "PointLiesOnLine(M, Line(R, S))",
        "PointLiesOnLine(Q, Line(L, M))",
        "PointLiesOnLine(Q, Line(L, R))",
        "PointLiesOnLine(Q, Line(L, S))",
        "PointLiesOnLine(Q, Line(P, M))",
        "PointLiesOnLine(Q, Line(P, R))",
        "PointLiesOnLine(Q, Line(P, S))",
        "PointLiesOnLine(R, Line(L, M))",
        "PointLiesOnLine(R, Line(L, S))",
        "PointLiesOnLine(R, Line(P, M))",
        "PointLiesOnLine(R, Line(P, S))",
        "PointLiesOnLine(R, Line(Q, M))",
        "PointLiesOnLine(R, Line(Q, S))"
    ],
    "point_instances": [
        "A",
        "P",
        "L",
        "Q",
        "R",
        "M",
        "S",
        "B"
    ],
    "line_instances": [
        "PL",
        "PQ",
        "PR",
        "PM",
        "PS",
        "LQ",
        "LR",
        "LM",
        "LS",
        "QR",
        "QM",
        "QS",
        "RM",
        "RS",
        "MS"
    ],
    "circle_instances": [
        "L",
        "M"
    ],
    "point_positions": {
        "A": [
            200.17733333333337,
            58.222222222222214
        ],
        "P": [
            44.2216,
            101.73333333333332
        ],
        "L": [
            127.77245288399098,
            101.36655252785398
        ],
        "Q": [
            178.7271111111111,
            102.0
        ],
        "R": [
            212.58117647058825,
            101.88235294117646
        ],
        "M": [
            232.7726221923417,
            101.39854118732936
        ],
        "S": [
            288.43536842105266,
            101.89473684210526
        ],
        "B": [
            200.233,
            145.16666666666666
        ]
    },
    "problem_choices": [
        2.5,
        6.0,
        6.5,
        20.0
    ],
    "choices_precise_value": [
        2.5,
        6.0,
        6.5,
        20.0
    ],
    "problem_answer": 2.5,
    "total_time": 74.070132,
    "solution_predicate": "Equals(2.5, LengthOf(Line(R, M)))",
    "proof": "Step 1:\nTheorem: Known facts\nPremises : start\nConclusions: 4 = QR, Q on \u2299(M, radius_M), 13 = 2 * radius_M, R on MQ\n\nStep 2:\nTheorem: Point On Circle Def\nPremises : Q on \u2299(M, radius_M)\nConclusions: radius_M = MQ\n\nStep 3:\nTheorem: Line Segment Split\nPremises : R on MQ\nConclusions: MQ = MR + QR\n\nStep 4:\nTheorem: Transtivity of Equivalence\nPremises : MQ = MR + QR, radius_M = MQ\nConclusions: radius_M = MR + QR\n\nStep 5:\nTheorem: Solve Linear Equation System\nPremises : 4 = QR, 13 = 2 * radius_M, radius_M = MR + QR\nConclusions: 2.5 = MR\n\n",
    "logic_fomrs_refined": [
        "Line(P, L)",
        "Line(P, Q)",
        "Line(P, R)",
        "Line(P, M)",
        "Line(P, S)",
        "Line(L, Q)",
        "Line(L, R)",
        "Line(L, M)",
        "Line(L, S)",
        "Line(Q, R)",
        "Line(Q, M)",
        "Line(Q, S)",
        "Line(R, M)",
        "Line(R, S)",
        "Line(M, S)",
        "Circle(L, radius_L)",
        "Circle(M, radius_M)",
        "Circle(L, radius_L)",
        "Circle(M, radius_M)",
        "Line(L, M)",
        "Line(L, Q)",
        "Line(L, R)",
        "Line(L, S)",
        "Line(M, S)",
        "Line(P, L)",
        "Line(P, M)",
        "Line(P, Q)",
        "Line(P, R)",
        "Line(P, S)",
        "Line(Q, M)",
        "Line(Q, R)",
        "Line(Q, S)",
        "Line(R, M)",
        "Line(R, S)",
        "PointLiesOnCircle(A, Circle(L, radius_L))",
        "PointLiesOnCircle(A, Circle(M, radius_M))",
        "PointLiesOnCircle(B, Circle(L, radius_L))",
        "PointLiesOnCircle(B, Circle(M, radius_M))",
        "PointLiesOnCircle(P, Circle(L, radius_L))",
        "PointLiesOnCircle(Q, Circle(M, radius_M))",
        "PointLiesOnCircle(R, Circle(L, radius_L))",
        "PointLiesOnCircle(S, Circle(M, radius_M))",
        "PointLiesOnLine(L, Line(P, M))",
        "PointLiesOnLine(L, Line(P, Q))",
        "PointLiesOnLine(L, Line(P, R))",
        "PointLiesOnLine(L, Line(P, S))",
        "PointLiesOnLine(M, Line(L, S))",
        "PointLiesOnLine(M, Line(P, S))",
        "PointLiesOnLine(M, Line(Q, S))",
        "PointLiesOnLine(M, Line(R, S))",
        "PointLiesOnLine(Q, Line(L, M))",
        "PointLiesOnLine(Q, Line(L, R))",
        "PointLiesOnLine(Q, Line(L, S))",
        "PointLiesOnLine(Q, Line(P, M))",
        "PointLiesOnLine(Q, Line(P, R))",
        "PointLiesOnLine(Q, Line(P, S))",
        "PointLiesOnLine(R, Line(L, M))",
        "PointLiesOnLine(R, Line(L, S))",
        "PointLiesOnLine(R, Line(P, M))",
        "PointLiesOnLine(R, Line(P, S))",
        "PointLiesOnLine(R, Line(Q, M))",
        "PointLiesOnLine(R, Line(Q, S))",
        "Equals(Mul(2.0, radius_L), 20.0)",
        "Equals(Mul(2.0, radius_M), 13.0)",
        "Equals(LengthOf(Line(Q, R)), 4.0)"
    ],
    "correct": true
}