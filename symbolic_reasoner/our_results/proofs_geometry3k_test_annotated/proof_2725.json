{
    "problem_id": "2725",
    "solved": true,
    "problem_text": "The diameters of \\odot A, \\odot B, and \\odot C are 10, 30 and 10 units, respectively. Find Y W if A Z \\cong C W and C W = 2.",
    "logic_forms": [
        "PointLiesOnLine(A, Line(D, E))",
        "PointLiesOnLine(A, Line(D, X))",
        "PointLiesOnLine(A, Line(D, B))",
        "PointLiesOnLine(A, Line(D, Y))",
        "PointLiesOnLine(A, Line(D, G))",
        "PointLiesOnLine(A, Line(D, C))",
        "PointLiesOnLine(A, Line(D, I))",
        "PointLiesOnLine(E, Line(D, X))",
        "PointLiesOnLine(E, Line(D, B))",
        "PointLiesOnLine(E, Line(D, Y))",
        "PointLiesOnLine(E, Line(D, G))",
        "PointLiesOnLine(E, Line(D, C))",
        "PointLiesOnLine(E, Line(D, I))",
        "PointLiesOnLine(E, Line(A, X))",
        "PointLiesOnLine(E, Line(A, B))",
        "PointLiesOnLine(E, Line(A, Y))",
        "PointLiesOnLine(E, Line(A, G))",
        "PointLiesOnLine(E, Line(A, C))",
        "PointLiesOnLine(E, Line(A, I))",
        "PointLiesOnLine(X, Line(D, B))",
        "PointLiesOnLine(X, Line(D, Y))",
        "PointLiesOnLine(X, Line(D, G))",
        "PointLiesOnLine(X, Line(D, C))",
        "PointLiesOnLine(X, Line(D, I))",
        "PointLiesOnLine(X, Line(A, B))",
        "PointLiesOnLine(X, Line(A, Y))",
        "PointLiesOnLine(X, Line(A, G))",
        "PointLiesOnLine(X, Line(A, C))",
        "PointLiesOnLine(X, Line(A, I))",
        "PointLiesOnLine(X, Line(E, B))",
        "PointLiesOnLine(X, Line(E, Y))",
        "PointLiesOnLine(X, Line(E, G))",
        "PointLiesOnLine(X, Line(E, C))",
        "PointLiesOnLine(X, Line(E, I))",
        "PointLiesOnLine(B, Line(D, Y))",
        "PointLiesOnLine(B, Line(D, G))",
        "PointLiesOnLine(B, Line(D, C))",
        "PointLiesOnLine(B, Line(D, I))",
        "PointLiesOnLine(B, Line(A, Y))",
        "PointLiesOnLine(B, Line(A, G))",
        "PointLiesOnLine(B, Line(A, C))",
        "PointLiesOnLine(B, Line(A, I))",
        "PointLiesOnLine(B, Line(E, Y))",
        "PointLiesOnLine(B, Line(E, G))",
        "PointLiesOnLine(B, Line(E, C))",
        "PointLiesOnLine(B, Line(E, I))",
        "PointLiesOnLine(B, Line(X, Y))",
        "PointLiesOnLine(B, Line(X, G))",
        "PointLiesOnLine(B, Line(X, C))",
        "PointLiesOnLine(B, Line(X, I))",
        "PointLiesOnLine(Y, Line(D, G))",
        "PointLiesOnLine(Y, Line(D, C))",
        "PointLiesOnLine(Y, Line(D, I))",
        "PointLiesOnLine(Y, Line(A, G))",
        "PointLiesOnLine(Y, Line(A, C))",
        "PointLiesOnLine(Y, Line(A, I))",
        "PointLiesOnLine(Y, Line(E, G))",
        "PointLiesOnLine(Y, Line(E, C))",
        "PointLiesOnLine(Y, Line(E, I))",
        "PointLiesOnLine(Y, Line(X, G))",
        "PointLiesOnLine(Y, Line(X, C))",
        "PointLiesOnLine(Y, Line(X, I))",
        "PointLiesOnLine(Y, Line(B, G))",
        "PointLiesOnLine(Y, Line(B, C))",
        "PointLiesOnLine(Y, Line(B, I))",
        "PointLiesOnLine(G, Line(D, C))",
        "PointLiesOnLine(G, Line(D, I))",
        "PointLiesOnLine(G, Line(A, C))",
        "PointLiesOnLine(G, Line(A, I))",
        "PointLiesOnLine(G, Line(E, C))",
        "PointLiesOnLine(G, Line(E, I))",
        "PointLiesOnLine(G, Line(X, C))",
        "PointLiesOnLine(G, Line(X, I))",
        "PointLiesOnLine(G, Line(B, C))",
        "PointLiesOnLine(G, Line(B, I))",
        "PointLiesOnLine(G, Line(Y, C))",
        "PointLiesOnLine(G, Line(Y, I))",
        "PointLiesOnLine(C, Line(D, I))",
        "PointLiesOnLine(C, Line(A, I))",
        "PointLiesOnLine(C, Line(E, I))",
        "PointLiesOnLine(C, Line(X, I))",
        "PointLiesOnLine(C, Line(B, I))",
        "PointLiesOnLine(C, Line(Y, I))",
        "PointLiesOnLine(C, Line(G, I))",
        "PointLiesOnCircle(D, Circle(A, radius_0_0))",
        "PointLiesOnCircle(Z, Circle(A, radius_0_0))",
        "PointLiesOnCircle(F, Circle(A, radius_0_0))",
        "PointLiesOnCircle(X, Circle(A, radius_0_0))",
        "PointLiesOnCircle(E, Circle(B, radius_1_0))",
        "PointLiesOnCircle(Z, Circle(B, radius_1_0))",
        "PointLiesOnCircle(F, Circle(B, radius_1_0))",
        "PointLiesOnCircle(W, Circle(B, radius_1_0))",
        "PointLiesOnCircle(G, Circle(B, radius_1_0))",
        "PointLiesOnCircle(H, Circle(B, radius_1_0))",
        "PointLiesOnCircle(Y, Circle(C, radius_2_0))",
        "PointLiesOnCircle(W, Circle(C, radius_2_0))",
        "PointLiesOnCircle(H, Circle(C, radius_2_0))",
        "PointLiesOnCircle(I, Circle(C, radius_2_0))",
        "Equals(DiameterOf(Circle(A)), 10)",
        "Equals(DiameterOf(Circle(B)), 30)",
        "Equals(DiameterOf(Circle(C)), 10)",
        "Equals(LengthOf(Line(C, G)), LengthOf(Line(A, E)))",
        "Equals(LengthOf(Line(C, G)), 2)",
        "Find(LengthOf(Line(Y, G)))"
    ],
    "point_instances": [
        "X",
        "Y",
        "Z",
        "C",
        "B",
        "W",
        "A",
        "D",
        "E",
        "F",
        "G",
        "H",
        "I"
    ],
    "line_instances": [
        "DA",
        "DE",
        "DX",
        "DB",
        "DY",
        "DG",
        "DC",
        "DI",
        "AE",
        "AX",
        "AB",
        "AY",
        "AG",
        "AC",
        "AI",
        "EX",
        "EB",
        "EY",
        "EG",
        "EC",
        "EI",
        "XB",
        "XY",
        "XG",
        "XC",
        "XI",
        "BY",
        "BG",
        "BC",
        "BI",
        "YG",
        "YC",
        "YI",
        "GC",
        "GI",
        "CI"
    ],
    "circle_instances": [
        "A",
        "B",
        "C"
    ],
    "point_positions": {
        "X": [
            155.14950166112956,
            132.49169435215947
        ],
        "Y": [
            311.9601328903654,
            132.8239202657807
        ],
        "Z": [
            128.57142857142856,
            177.00996677740864
        ],
        "C": [
            364.45182724252487,
            132.49169435215947
        ],
        "B": [
            229.23588039867107,
            132.1594684385382
        ],
        "W": [
            331.5614617940199,
            172.0265780730897
        ],
        "A": [
            103.65448504983388,
            132.49169435215947
        ],
        "D": [
            50.83056478405315,
            132.49169435215947
        ],
        "E": [
            118.27242524916943,
            132.8239202657807
        ],
        "F": [
            128.2392026578073,
            87.64119601328903
        ],
        "G": [
            338.53820598006644,
            132.8239202657807
        ],
        "H": [
            331.2292358803986,
            92.95681063122923
        ],
        "I": [
            415.94684385382055,
            133.156146179402
        ]
    },
    "problem_choices": [
        "2",
        "3",
        "10",
        "30"
    ],
    "choices_precise_value": [
        2.0,
        3.0,
        10.0,
        30.0
    ],
    "problem_answer": 3.0,
    "total_time": 684.526956,
    "solution_predicate": "Equals(3.0, LengthOf(Line(Y, G)))",
    "proof": "Step 1:\nTheorem: Known facts\nPremises : start\nConclusions: 2 = CG, Y on \u2299(C, radius_2_0), G on CY, 10 = 2 * radius_2_0\n\nStep 2:\nTheorem: Point On Circle Def\nPremises : Y on \u2299(C, radius_2_0)\nConclusions: radius_2_0 = CY\n\nStep 3:\nTheorem: Line Segment Split\nPremises : G on CY\nConclusions: CY = CG + GY\n\nStep 4:\nTheorem: Transtivity of Equivalence\nPremises : radius_2_0 = CY, CY = CG + GY\nConclusions: radius_2_0 = CG + GY\n\nStep 5:\nTheorem: Solve Linear Equation System\nPremises : radius_2_0 = CG + GY, 10 = 2 * radius_2_0, 2 = CG\nConclusions: 3 = GY\n\n",
    "logic_fomrs_refined": [
        "Line(D, A)",
        "Line(D, E)",
        "Line(D, X)",
        "Line(D, B)",
        "Line(D, Y)",
        "Line(D, G)",
        "Line(D, C)",
        "Line(D, I)",
        "Line(A, E)",
        "Line(A, X)",
        "Line(A, B)",
        "Line(A, Y)",
        "Line(A, G)",
        "Line(A, C)",
        "Line(A, I)",
        "Line(E, X)",
        "Line(E, B)",
        "Line(E, Y)",
        "Line(E, G)",
        "Line(E, C)",
        "Line(E, I)",
        "Line(X, B)",
        "Line(X, Y)",
        "Line(X, G)",
        "Line(X, C)",
        "Line(X, I)",
        "Line(B, Y)",
        "Line(B, G)",
        "Line(B, C)",
        "Line(B, I)",
        "Line(Y, G)",
        "Line(Y, C)",
        "Line(Y, I)",
        "Line(G, C)",
        "Line(G, I)",
        "Line(C, I)",
        "Circle(A, radius_0_0)",
        "Circle(C, radius_2_0)",
        "Circle(B, radius_1_0)",
        "PointLiesOnLine(A, Line(D, E))",
        "PointLiesOnLine(A, Line(D, X))",
        "PointLiesOnLine(A, Line(D, B))",
        "PointLiesOnLine(A, Line(D, Y))",
        "PointLiesOnLine(A, Line(D, G))",
        "PointLiesOnLine(A, Line(D, C))",
        "PointLiesOnLine(A, Line(D, I))",
        "PointLiesOnLine(E, Line(D, X))",
        "PointLiesOnLine(E, Line(D, B))",
        "PointLiesOnLine(E, Line(D, Y))",
        "PointLiesOnLine(E, Line(D, G))",
        "PointLiesOnLine(E, Line(D, C))",
        "PointLiesOnLine(E, Line(D, I))",
        "PointLiesOnLine(E, Line(A, X))",
        "PointLiesOnLine(E, Line(A, B))",
        "PointLiesOnLine(E, Line(A, Y))",
        "PointLiesOnLine(E, Line(A, G))",
        "PointLiesOnLine(E, Line(A, C))",
        "PointLiesOnLine(E, Line(A, I))",
        "PointLiesOnLine(X, Line(D, B))",
        "PointLiesOnLine(X, Line(D, Y))",
        "PointLiesOnLine(X, Line(D, G))",
        "PointLiesOnLine(X, Line(D, C))",
        "PointLiesOnLine(X, Line(D, I))",
        "PointLiesOnLine(X, Line(A, B))",
        "PointLiesOnLine(X, Line(A, Y))",
        "PointLiesOnLine(X, Line(A, G))",
        "PointLiesOnLine(X, Line(A, C))",
        "PointLiesOnLine(X, Line(A, I))",
        "PointLiesOnLine(X, Line(E, B))",
        "PointLiesOnLine(X, Line(E, Y))",
        "PointLiesOnLine(X, Line(E, G))",
        "PointLiesOnLine(X, Line(E, C))",
        "PointLiesOnLine(X, Line(E, I))",
        "PointLiesOnLine(B, Line(D, Y))",
        "PointLiesOnLine(B, Line(D, G))",
        "PointLiesOnLine(B, Line(D, C))",
        "PointLiesOnLine(B, Line(D, I))",
        "PointLiesOnLine(B, Line(A, Y))",
        "PointLiesOnLine(B, Line(A, G))",
        "PointLiesOnLine(B, Line(A, C))",
        "PointLiesOnLine(B, Line(A, I))",
        "PointLiesOnLine(B, Line(E, Y))",
        "PointLiesOnLine(B, Line(E, G))",
        "PointLiesOnLine(B, Line(E, C))",
        "PointLiesOnLine(B, Line(E, I))",
        "PointLiesOnLine(B, Line(X, Y))",
        "PointLiesOnLine(B, Line(X, G))",
        "PointLiesOnLine(B, Line(X, C))",
        "PointLiesOnLine(B, Line(X, I))",
        "PointLiesOnLine(Y, Line(D, G))",
        "PointLiesOnLine(Y, Line(D, C))",
        "PointLiesOnLine(Y, Line(D, I))",
        "PointLiesOnLine(Y, Line(A, G))",
        "PointLiesOnLine(Y, Line(A, C))",
        "PointLiesOnLine(Y, Line(A, I))",
        "PointLiesOnLine(Y, Line(E, G))",
        "PointLiesOnLine(Y, Line(E, C))",
        "PointLiesOnLine(Y, Line(E, I))",
        "PointLiesOnLine(Y, Line(X, G))",
        "PointLiesOnLine(Y, Line(X, C))",
        "PointLiesOnLine(Y, Line(X, I))",
        "PointLiesOnLine(Y, Line(B, G))",
        "PointLiesOnLine(Y, Line(B, C))",
        "PointLiesOnLine(Y, Line(B, I))",
        "PointLiesOnLine(G, Line(D, C))",
        "PointLiesOnLine(G, Line(D, I))",
        "PointLiesOnLine(G, Line(A, C))",
        "PointLiesOnLine(G, Line(A, I))",
        "PointLiesOnLine(G, Line(E, C))",
        "PointLiesOnLine(G, Line(E, I))",
        "PointLiesOnLine(G, Line(X, C))",
        "PointLiesOnLine(G, Line(X, I))",
        "PointLiesOnLine(G, Line(B, C))",
        "PointLiesOnLine(G, Line(B, I))",
        "PointLiesOnLine(G, Line(Y, C))",
        "PointLiesOnLine(G, Line(Y, I))",
        "PointLiesOnLine(C, Line(D, I))",
        "PointLiesOnLine(C, Line(A, I))",
        "PointLiesOnLine(C, Line(E, I))",
        "PointLiesOnLine(C, Line(X, I))",
        "PointLiesOnLine(C, Line(B, I))",
        "PointLiesOnLine(C, Line(Y, I))",
        "PointLiesOnLine(C, Line(G, I))",
        "PointLiesOnCircle(D, Circle(A, radius_0_0))",
        "PointLiesOnCircle(Z, Circle(A, radius_0_0))",
        "PointLiesOnCircle(F, Circle(A, radius_0_0))",
        "PointLiesOnCircle(X, Circle(A, radius_0_0))",
        "PointLiesOnCircle(E, Circle(B, radius_1_0))",
        "PointLiesOnCircle(Z, Circle(B, radius_1_0))",
        "PointLiesOnCircle(F, Circle(B, radius_1_0))",
        "PointLiesOnCircle(W, Circle(B, radius_1_0))",
        "PointLiesOnCircle(G, Circle(B, radius_1_0))",
        "PointLiesOnCircle(H, Circle(B, radius_1_0))",
        "PointLiesOnCircle(Y, Circle(C, radius_2_0))",
        "PointLiesOnCircle(W, Circle(C, radius_2_0))",
        "PointLiesOnCircle(H, Circle(C, radius_2_0))",
        "PointLiesOnCircle(I, Circle(C, radius_2_0))",
        "Equals(Mul(2.0, radius_0_0), 10.0)",
        "Equals(Mul(2.0, radius_1_0), 30.0)",
        "Equals(Mul(2.0, radius_2_0), 10.0)",
        "Equals(LengthOf(Line(C, G)), LengthOf(Line(A, E)))",
        "Equals(LengthOf(Line(C, G)), 2.0)"
    ],
    "correct": true
}