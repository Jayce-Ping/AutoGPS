{
    "problem_id": "2431",
    "solved": false,
    "problem_text": "In regular hexagon U V W X Y Z, the side is 12 centimeters long. Find W Y.",
    "logic_forms": [
        "PointLiesOnLine(B, Line(X, A))",
        "PointLiesOnLine(B, Line(X, U))",
        "PointLiesOnLine(A, Line(X, U))",
        "PointLiesOnLine(A, Line(B, U))",
        "PointLiesOnLine(B, Line(W, Y))",
        "PointLiesOnLine(A, Line(V, Y))",
        "PointLiesOnLine(A, Line(W, Z))",
        "Perpendicular(Line(X, B), Line(Y, B))",
        "Equals(LengthOf(Line(W, V)), LengthOf(Line(X, Y)))",
        "Equals(LengthOf(Line(W, V)), LengthOf(Line(W, A)))",
        "Equals(LengthOf(Line(W, V)), LengthOf(Line(V, U)))",
        "Equals(LengthOf(Line(W, V)), LengthOf(Line(Y, Z)))",
        "Equals(LengthOf(Line(W, V)), LengthOf(Line(A, Z)))",
        "Equals(LengthOf(Line(W, V)), LengthOf(Line(A, U)))",
        "Equals(LengthOf(Line(W, V)), LengthOf(Line(V, A)))",
        "Equals(LengthOf(Line(W, V)), LengthOf(Line(A, Y)))",
        "Equals(LengthOf(Line(W, V)), LengthOf(Line(U, Z)))",
        "Equals(LengthOf(Line(W, V)), LengthOf(Line(W, X)))",
        "Equals(LengthOf(Line(X, Y)), LengthOf(Line(W, A)))",
        "Equals(LengthOf(Line(X, Y)), LengthOf(Line(V, U)))",
        "Equals(LengthOf(Line(X, Y)), LengthOf(Line(Y, Z)))",
        "Equals(LengthOf(Line(X, Y)), LengthOf(Line(A, Z)))",
        "Equals(LengthOf(Line(X, Y)), LengthOf(Line(A, U)))",
        "Equals(LengthOf(Line(X, Y)), LengthOf(Line(V, A)))",
        "Equals(LengthOf(Line(X, Y)), LengthOf(Line(A, Y)))",
        "Equals(LengthOf(Line(X, Y)), LengthOf(Line(U, Z)))",
        "Equals(LengthOf(Line(X, Y)), LengthOf(Line(W, X)))",
        "Equals(LengthOf(Line(W, A)), LengthOf(Line(V, U)))",
        "Equals(LengthOf(Line(W, A)), LengthOf(Line(Y, Z)))",
        "Equals(LengthOf(Line(W, A)), LengthOf(Line(A, Z)))",
        "Equals(LengthOf(Line(W, A)), LengthOf(Line(A, U)))",
        "Equals(LengthOf(Line(W, A)), LengthOf(Line(V, A)))",
        "Equals(LengthOf(Line(W, A)), LengthOf(Line(A, Y)))",
        "Equals(LengthOf(Line(W, A)), LengthOf(Line(U, Z)))",
        "Equals(LengthOf(Line(W, A)), LengthOf(Line(W, X)))",
        "Equals(LengthOf(Line(V, U)), LengthOf(Line(Y, Z)))",
        "Equals(LengthOf(Line(V, U)), LengthOf(Line(A, Z)))",
        "Equals(LengthOf(Line(V, U)), LengthOf(Line(A, U)))",
        "Equals(LengthOf(Line(V, U)), LengthOf(Line(V, A)))",
        "Equals(LengthOf(Line(V, U)), LengthOf(Line(A, Y)))",
        "Equals(LengthOf(Line(V, U)), LengthOf(Line(U, Z)))",
        "Equals(LengthOf(Line(V, U)), LengthOf(Line(W, X)))",
        "Equals(LengthOf(Line(Y, Z)), LengthOf(Line(A, Z)))",
        "Equals(LengthOf(Line(Y, Z)), LengthOf(Line(A, U)))",
        "Equals(LengthOf(Line(Y, Z)), LengthOf(Line(V, A)))",
        "Equals(LengthOf(Line(Y, Z)), LengthOf(Line(A, Y)))",
        "Equals(LengthOf(Line(Y, Z)), LengthOf(Line(U, Z)))",
        "Equals(LengthOf(Line(Y, Z)), LengthOf(Line(W, X)))",
        "Equals(LengthOf(Line(A, Z)), LengthOf(Line(A, U)))",
        "Equals(LengthOf(Line(A, Z)), LengthOf(Line(V, A)))",
        "Equals(LengthOf(Line(A, Z)), LengthOf(Line(A, Y)))",
        "Equals(LengthOf(Line(A, Z)), LengthOf(Line(U, Z)))",
        "Equals(LengthOf(Line(A, Z)), LengthOf(Line(W, X)))",
        "Equals(LengthOf(Line(A, U)), LengthOf(Line(V, A)))",
        "Equals(LengthOf(Line(A, U)), LengthOf(Line(A, Y)))",
        "Equals(LengthOf(Line(A, U)), LengthOf(Line(U, Z)))",
        "Equals(LengthOf(Line(A, U)), LengthOf(Line(W, X)))",
        "Equals(LengthOf(Line(V, A)), LengthOf(Line(A, Y)))",
        "Equals(LengthOf(Line(V, A)), LengthOf(Line(U, Z)))",
        "Equals(LengthOf(Line(V, A)), LengthOf(Line(W, X)))",
        "Equals(LengthOf(Line(A, Y)), LengthOf(Line(U, Z)))",
        "Equals(LengthOf(Line(A, Y)), LengthOf(Line(W, X)))",
        "Equals(LengthOf(Line(U, Z)), LengthOf(Line(W, X)))",
        "Equals(LengthOf(Line(Z, Y)), 12)",
        "Regular(Hexagon(U, V, W, X, Y, Z))",
        "Equals(SideOf(Hexagon(U, V, W, X, Y, Z)), 12)",
        "Find(LengthOf(Line(W, Y)))"
    ],
    "point_instances": [
        "X",
        "Y",
        "U",
        "Z",
        "V",
        "W",
        "A",
        "B"
    ],
    "line_instances": [
        "UZ",
        "YZ",
        "XY",
        "WX",
        "WV",
        "VU",
        "XB",
        "XA",
        "XU",
        "BA",
        "BU",
        "AU",
        "WB",
        "WY",
        "BY",
        "VA",
        "VY",
        "AY",
        "WA",
        "WZ",
        "AZ"
    ],
    "circle_instances": [],
    "point_positions": {
        "X": [
            208.1525885558583,
            39.782016348773844
        ],
        "Y": [
            255.83651226158037,
            122.6158038147139
        ],
        "U": [
            113.87465940054497,
            204.35967302452318
        ],
        "Z": [
            208.42506811989102,
            204.35967302452318
        ],
        "V": [
            66.19073569482289,
            122.0708446866485
        ],
        "W": [
            113.32970027247956,
            39.782016348773844
        ],
        "A": [
            161.28610354223434,
            121.52588555858311
        ],
        "B": [
            185.53678474114443,
            80.38147138964578
        ]
    },
    "problem_choices": [
        "12",
        "6 \\sqrt { 6 }",
        "12 \\sqrt { 3 }",
        "36"
    ],
    "choices_precise_value": [
        12.0,
        14.696938456699067,
        20.784609690826528,
        36.0
    ],
    "problem_answer": 20.784609690826528,
    "error": "Timeout after 1800.1 seconds (limit: 1800s)",
    "total_time": 1800.134461
}