{
    "problem_id": "2687",
    "solved": true,
    "problem_text": "The diameters of \\odot A, \\odot B, and \\odot C are 10, 30 and 10 units, respectively. Find A C if A Z \\cong C W and C W = 2.",
    "logic_forms": [
        "PointLiesOnLine(A, Line(D, E))",
        "PointLiesOnLine(A, Line(D, X))",
        "PointLiesOnLine(A, Line(D, B))",
        "PointLiesOnLine(A, Line(D, Y))",
        "PointLiesOnLine(A, Line(D, H))",
        "PointLiesOnLine(A, Line(D, C))",
        "PointLiesOnLine(A, Line(D, I))",
        "PointLiesOnLine(E, Line(D, X))",
        "PointLiesOnLine(E, Line(D, B))",
        "PointLiesOnLine(E, Line(D, Y))",
        "PointLiesOnLine(E, Line(D, H))",
        "PointLiesOnLine(E, Line(D, C))",
        "PointLiesOnLine(E, Line(D, I))",
        "PointLiesOnLine(E, Line(A, X))",
        "PointLiesOnLine(E, Line(A, B))",
        "PointLiesOnLine(E, Line(A, Y))",
        "PointLiesOnLine(E, Line(A, H))",
        "PointLiesOnLine(E, Line(A, C))",
        "PointLiesOnLine(E, Line(A, I))",
        "PointLiesOnLine(X, Line(D, B))",
        "PointLiesOnLine(X, Line(D, Y))",
        "PointLiesOnLine(X, Line(D, H))",
        "PointLiesOnLine(X, Line(D, C))",
        "PointLiesOnLine(X, Line(D, I))",
        "PointLiesOnLine(X, Line(A, B))",
        "PointLiesOnLine(X, Line(A, Y))",
        "PointLiesOnLine(X, Line(A, H))",
        "PointLiesOnLine(X, Line(A, C))",
        "PointLiesOnLine(X, Line(A, I))",
        "PointLiesOnLine(X, Line(E, B))",
        "PointLiesOnLine(X, Line(E, Y))",
        "PointLiesOnLine(X, Line(E, H))",
        "PointLiesOnLine(X, Line(E, C))",
        "PointLiesOnLine(X, Line(E, I))",
        "PointLiesOnLine(B, Line(D, Y))",
        "PointLiesOnLine(B, Line(D, H))",
        "PointLiesOnLine(B, Line(D, C))",
        "PointLiesOnLine(B, Line(D, I))",
        "PointLiesOnLine(B, Line(A, Y))",
        "PointLiesOnLine(B, Line(A, H))",
        "PointLiesOnLine(B, Line(A, C))",
        "PointLiesOnLine(B, Line(A, I))",
        "PointLiesOnLine(B, Line(E, Y))",
        "PointLiesOnLine(B, Line(E, H))",
        "PointLiesOnLine(B, Line(E, C))",
        "PointLiesOnLine(B, Line(E, I))",
        "PointLiesOnLine(B, Line(X, Y))",
        "PointLiesOnLine(B, Line(X, H))",
        "PointLiesOnLine(B, Line(X, C))",
        "PointLiesOnLine(B, Line(X, I))",
        "PointLiesOnLine(Y, Line(D, H))",
        "PointLiesOnLine(Y, Line(D, C))",
        "PointLiesOnLine(Y, Line(D, I))",
        "PointLiesOnLine(Y, Line(A, H))",
        "PointLiesOnLine(Y, Line(A, C))",
        "PointLiesOnLine(Y, Line(A, I))",
        "PointLiesOnLine(Y, Line(E, H))",
        "PointLiesOnLine(Y, Line(E, C))",
        "PointLiesOnLine(Y, Line(E, I))",
        "PointLiesOnLine(Y, Line(X, H))",
        "PointLiesOnLine(Y, Line(X, C))",
        "PointLiesOnLine(Y, Line(X, I))",
        "PointLiesOnLine(Y, Line(B, H))",
        "PointLiesOnLine(Y, Line(B, C))",
        "PointLiesOnLine(Y, Line(B, I))",
        "PointLiesOnLine(H, Line(D, C))",
        "PointLiesOnLine(H, Line(D, I))",
        "PointLiesOnLine(H, Line(A, C))",
        "PointLiesOnLine(H, Line(A, I))",
        "PointLiesOnLine(H, Line(E, C))",
        "PointLiesOnLine(H, Line(E, I))",
        "PointLiesOnLine(H, Line(X, C))",
        "PointLiesOnLine(H, Line(X, I))",
        "PointLiesOnLine(H, Line(B, C))",
        "PointLiesOnLine(H, Line(B, I))",
        "PointLiesOnLine(H, Line(Y, C))",
        "PointLiesOnLine(H, Line(Y, I))",
        "PointLiesOnLine(C, Line(D, I))",
        "PointLiesOnLine(C, Line(A, I))",
        "PointLiesOnLine(C, Line(E, I))",
        "PointLiesOnLine(C, Line(X, I))",
        "PointLiesOnLine(C, Line(B, I))",
        "PointLiesOnLine(C, Line(Y, I))",
        "PointLiesOnLine(C, Line(H, I))",
        "PointLiesOnCircle(D, Circle(A, radius_0_0))",
        "PointLiesOnCircle(Z, Circle(A, radius_0_0))",
        "PointLiesOnCircle(F, Circle(A, radius_0_0))",
        "PointLiesOnCircle(X, Circle(A, radius_0_0))",
        "PointLiesOnCircle(E, Circle(B, radius_1_0))",
        "PointLiesOnCircle(Z, Circle(B, radius_1_0))",
        "PointLiesOnCircle(F, Circle(B, radius_1_0))",
        "PointLiesOnCircle(G, Circle(B, radius_1_0))",
        "PointLiesOnCircle(W, Circle(B, radius_1_0))",
        "PointLiesOnCircle(H, Circle(B, radius_1_0))",
        "PointLiesOnCircle(Y, Circle(C, radius_2_0))",
        "PointLiesOnCircle(G, Circle(C, radius_2_0))",
        "PointLiesOnCircle(W, Circle(C, radius_2_0))",
        "PointLiesOnCircle(I, Circle(C, radius_2_0))",
        "Equals(DiameterOf(Circle(A)), 10)",
        "Equals(DiameterOf(Circle(B)), 30)",
        "Equals(DiameterOf(Circle(C)), 10)",
        "Equals(LengthOf(Line(A, E)), LengthOf(Line(C, H)))",
        "Equals(LengthOf(Line(C, H)), 2)",
        "Find(LengthOf(Line(A, C)))"
    ],
    "point_instances": [
        "X",
        "Y",
        "Z",
        "C",
        "B",
        "W",
        "A",
        "D",
        "E",
        "F",
        "G",
        "H",
        "I"
    ],
    "line_instances": [
        "DA",
        "DE",
        "DX",
        "DB",
        "DY",
        "DH",
        "DC",
        "DI",
        "AE",
        "AX",
        "AB",
        "AY",
        "AH",
        "AC",
        "AI",
        "EX",
        "EB",
        "EY",
        "EH",
        "EC",
        "EI",
        "XB",
        "XY",
        "XH",
        "XC",
        "XI",
        "BY",
        "BH",
        "BC",
        "BI",
        "YH",
        "YC",
        "YI",
        "HC",
        "HI",
        "CI"
    ],
    "circle_instances": [
        "A",
        "B",
        "C"
    ],
    "point_positions": {
        "X": [
            155.14950166112956,
            132.8239202657807
        ],
        "Y": [
            312.2923588039867,
            132.8239202657807
        ],
        "Z": [
            128.57142857142856,
            177.34219269102988
        ],
        "C": [
            364.7840531561462,
            132.1594684385382
        ],
        "B": [
            229.23588039867107,
            132.8239202657807
        ],
        "W": [
            330.8970099667774,
            172.0265780730897
        ],
        "A": [
            103.32225913621262,
            132.49169435215947
        ],
        "D": [
            51.16279069767442,
            132.8239202657807
        ],
        "E": [
            118.93687707641195,
            133.156146179402
        ],
        "F": [
            128.57142857142856,
            87.97342192691029
        ],
        "G": [
            331.89368770764116,
            92.62458471760796
        ],
        "H": [
            338.8704318936877,
            133.156146179402
        ],
        "I": [
            415.6146179401993,
            132.49169435215947
        ]
    },
    "problem_choices": [
        "2",
        "10",
        "30",
        "34"
    ],
    "choices_precise_value": [
        2.0,
        10.0,
        30.0,
        34.0
    ],
    "problem_answer": 34.0,
    "total_time": 646.115941,
    "solution_predicate": "Equals(34.0, LengthOf(Line(A, C)))",
    "proof": "Step 1:\nTheorem: Known facts\nPremises : start\nConclusions: H on CE, E on \u2299(B, radius_1_0), E on AC, 30 = 2 * radius_1_0, AE = CH, H on \u2299(B, radius_1_0), 2 = CH, B on EH\n\nStep 2:\nTheorem: Line Segment Split\nPremises : H on CE\nConclusions: CE = CH + EH\n\nStep 3:\nTheorem: Line Segment Split\nPremises : E on AC\nConclusions: AC = AE + CE\n\nStep 4:\nTheorem: Transtivity of Equivalence\nPremises : 2 = CH, AE = CH\nConclusions: 2 = AE\n\nStep 5:\nTheorem: Diameter Definition\nPremises : E on \u2299(B, radius_1_0), H on \u2299(B, radius_1_0), B on EH\nConclusions: IsDiameterOf(EH, \u2299(B, radius_1_0))\n\nStep 6:\nTheorem: Diameter Properties\nPremises : IsDiameterOf(EH, \u2299(B, radius_1_0))\nConclusions: 2 * radius_1_0 = EH, E on \u2299(B, radius_1_0), H on \u2299(B, radius_1_0)\n\nStep 7:\nTheorem: Transtivity of Equivalence\nPremises : 30 = 2 * radius_1_0, 2 * radius_1_0 = EH\nConclusions: 30 = EH\n\nStep 8:\nTheorem: Evaluate\nPremises : 2 = CH, 30 = EH\nConclusions: 32 = CH + EH\n\nStep 9:\nTheorem: Transtivity of Equivalence\nPremises : 32 = CH + EH, CE = CH + EH\nConclusions: 32 = CE\n\nStep 10:\nTheorem: Solve Linear Equation System\nPremises : 32 = CE, 2 = AE, AC = AE + CE\nConclusions: 34 = AC\n\n",
    "logic_fomrs_refined": [
        "Line(D, A)",
        "Line(D, E)",
        "Line(D, X)",
        "Line(D, B)",
        "Line(D, Y)",
        "Line(D, H)",
        "Line(D, C)",
        "Line(D, I)",
        "Line(A, E)",
        "Line(A, X)",
        "Line(A, B)",
        "Line(A, Y)",
        "Line(A, H)",
        "Line(A, C)",
        "Line(A, I)",
        "Line(E, X)",
        "Line(E, B)",
        "Line(E, Y)",
        "Line(E, H)",
        "Line(E, C)",
        "Line(E, I)",
        "Line(X, B)",
        "Line(X, Y)",
        "Line(X, H)",
        "Line(X, C)",
        "Line(X, I)",
        "Line(B, Y)",
        "Line(B, H)",
        "Line(B, C)",
        "Line(B, I)",
        "Line(Y, H)",
        "Line(Y, C)",
        "Line(Y, I)",
        "Line(H, C)",
        "Line(H, I)",
        "Line(C, I)",
        "Circle(B, radius_1_0)",
        "Circle(A, radius_0_0)",
        "Circle(C, radius_2_0)",
        "PointLiesOnLine(A, Line(D, E))",
        "PointLiesOnLine(A, Line(D, X))",
        "PointLiesOnLine(A, Line(D, B))",
        "PointLiesOnLine(A, Line(D, Y))",
        "PointLiesOnLine(A, Line(D, H))",
        "PointLiesOnLine(A, Line(D, C))",
        "PointLiesOnLine(A, Line(D, I))",
        "PointLiesOnLine(E, Line(D, X))",
        "PointLiesOnLine(E, Line(D, B))",
        "PointLiesOnLine(E, Line(D, Y))",
        "PointLiesOnLine(E, Line(D, H))",
        "PointLiesOnLine(E, Line(D, C))",
        "PointLiesOnLine(E, Line(D, I))",
        "PointLiesOnLine(E, Line(A, X))",
        "PointLiesOnLine(E, Line(A, B))",
        "PointLiesOnLine(E, Line(A, Y))",
        "PointLiesOnLine(E, Line(A, H))",
        "PointLiesOnLine(E, Line(A, C))",
        "PointLiesOnLine(E, Line(A, I))",
        "PointLiesOnLine(X, Line(D, B))",
        "PointLiesOnLine(X, Line(D, Y))",
        "PointLiesOnLine(X, Line(D, H))",
        "PointLiesOnLine(X, Line(D, C))",
        "PointLiesOnLine(X, Line(D, I))",
        "PointLiesOnLine(X, Line(A, B))",
        "PointLiesOnLine(X, Line(A, Y))",
        "PointLiesOnLine(X, Line(A, H))",
        "PointLiesOnLine(X, Line(A, C))",
        "PointLiesOnLine(X, Line(A, I))",
        "PointLiesOnLine(X, Line(E, B))",
        "PointLiesOnLine(X, Line(E, Y))",
        "PointLiesOnLine(X, Line(E, H))",
        "PointLiesOnLine(X, Line(E, C))",
        "PointLiesOnLine(X, Line(E, I))",
        "PointLiesOnLine(B, Line(D, Y))",
        "PointLiesOnLine(B, Line(D, H))",
        "PointLiesOnLine(B, Line(D, C))",
        "PointLiesOnLine(B, Line(D, I))",
        "PointLiesOnLine(B, Line(A, Y))",
        "PointLiesOnLine(B, Line(A, H))",
        "PointLiesOnLine(B, Line(A, C))",
        "PointLiesOnLine(B, Line(A, I))",
        "PointLiesOnLine(B, Line(E, Y))",
        "PointLiesOnLine(B, Line(E, H))",
        "PointLiesOnLine(B, Line(E, C))",
        "PointLiesOnLine(B, Line(E, I))",
        "PointLiesOnLine(B, Line(X, Y))",
        "PointLiesOnLine(B, Line(X, H))",
        "PointLiesOnLine(B, Line(X, C))",
        "PointLiesOnLine(B, Line(X, I))",
        "PointLiesOnLine(Y, Line(D, H))",
        "PointLiesOnLine(Y, Line(D, C))",
        "PointLiesOnLine(Y, Line(D, I))",
        "PointLiesOnLine(Y, Line(A, H))",
        "PointLiesOnLine(Y, Line(A, C))",
        "PointLiesOnLine(Y, Line(A, I))",
        "PointLiesOnLine(Y, Line(E, H))",
        "PointLiesOnLine(Y, Line(E, C))",
        "PointLiesOnLine(Y, Line(E, I))",
        "PointLiesOnLine(Y, Line(X, H))",
        "PointLiesOnLine(Y, Line(X, C))",
        "PointLiesOnLine(Y, Line(X, I))",
        "PointLiesOnLine(Y, Line(B, H))",
        "PointLiesOnLine(Y, Line(B, C))",
        "PointLiesOnLine(Y, Line(B, I))",
        "PointLiesOnLine(H, Line(D, C))",
        "PointLiesOnLine(H, Line(D, I))",
        "PointLiesOnLine(H, Line(A, C))",
        "PointLiesOnLine(H, Line(A, I))",
        "PointLiesOnLine(H, Line(E, C))",
        "PointLiesOnLine(H, Line(E, I))",
        "PointLiesOnLine(H, Line(X, C))",
        "PointLiesOnLine(H, Line(X, I))",
        "PointLiesOnLine(H, Line(B, C))",
        "PointLiesOnLine(H, Line(B, I))",
        "PointLiesOnLine(H, Line(Y, C))",
        "PointLiesOnLine(H, Line(Y, I))",
        "PointLiesOnLine(C, Line(D, I))",
        "PointLiesOnLine(C, Line(A, I))",
        "PointLiesOnLine(C, Line(E, I))",
        "PointLiesOnLine(C, Line(X, I))",
        "PointLiesOnLine(C, Line(B, I))",
        "PointLiesOnLine(C, Line(Y, I))",
        "PointLiesOnLine(C, Line(H, I))",
        "PointLiesOnCircle(D, Circle(A, radius_0_0))",
        "PointLiesOnCircle(Z, Circle(A, radius_0_0))",
        "PointLiesOnCircle(F, Circle(A, radius_0_0))",
        "PointLiesOnCircle(X, Circle(A, radius_0_0))",
        "PointLiesOnCircle(E, Circle(B, radius_1_0))",
        "PointLiesOnCircle(Z, Circle(B, radius_1_0))",
        "PointLiesOnCircle(F, Circle(B, radius_1_0))",
        "PointLiesOnCircle(G, Circle(B, radius_1_0))",
        "PointLiesOnCircle(W, Circle(B, radius_1_0))",
        "PointLiesOnCircle(H, Circle(B, radius_1_0))",
        "PointLiesOnCircle(Y, Circle(C, radius_2_0))",
        "PointLiesOnCircle(G, Circle(C, radius_2_0))",
        "PointLiesOnCircle(W, Circle(C, radius_2_0))",
        "PointLiesOnCircle(I, Circle(C, radius_2_0))",
        "Equals(Mul(2.0, radius_0_0), 10.0)",
        "Equals(Mul(2.0, radius_1_0), 30.0)",
        "Equals(Mul(2.0, radius_2_0), 10.0)",
        "Equals(LengthOf(Line(A, E)), LengthOf(Line(C, H)))",
        "Equals(LengthOf(Line(C, H)), 2.0)"
    ],
    "correct": true
}