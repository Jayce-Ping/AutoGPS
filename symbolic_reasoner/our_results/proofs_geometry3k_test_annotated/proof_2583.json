{
    "problem_id": "2583",
    "solved": true,
    "problem_text": "If L K = 4, M P = 3, P Q = 6, K J = 2, R S = 6, and L P = 2, find M L.",
    "logic_forms": [
        "PointLiesOnLine(R, Line(S, Q))",
        "PointLiesOnLine(R, Line(S, P))",
        "PointLiesOnLine(R, Line(S, M))",
        "PointLiesOnLine(Q, Line(S, P))",
        "PointLiesOnLine(Q, Line(S, M))",
        "PointLiesOnLine(Q, Line(R, P))",
        "PointLiesOnLine(Q, Line(R, M))",
        "PointLiesOnLine(P, Line(S, M))",
        "PointLiesOnLine(P, Line(R, M))",
        "PointLiesOnLine(P, Line(Q, M))",
        "PointLiesOnLine(J, Line(H, K))",
        "PointLiesOnLine(J, Line(H, L))",
        "PointLiesOnLine(J, Line(H, M))",
        "PointLiesOnLine(K, Line(H, L))",
        "PointLiesOnLine(K, Line(H, M))",
        "PointLiesOnLine(K, Line(J, L))",
        "PointLiesOnLine(K, Line(J, M))",
        "PointLiesOnLine(L, Line(H, M))",
        "PointLiesOnLine(L, Line(J, M))",
        "PointLiesOnLine(L, Line(K, M))",
        "Parallel(Line(H, S), Line(L, P))",
        "Parallel(Line(H, S), Line(K, Q))",
        "Parallel(Line(H, S), Line(J, R))",
        "Parallel(Line(L, P), Line(K, Q))",
        "Parallel(Line(L, P), Line(J, R))",
        "Parallel(Line(K, Q), Line(J, R))",
        "Equals(LengthOf(Line(L, K)), 4)",
        "Equals(LengthOf(Line(M, P)), 3)",
        "Equals(LengthOf(Line(P, Q)), 6)",
        "Equals(LengthOf(Line(K, J)), 2)",
        "Equals(LengthOf(Line(R, S)), 6)",
        "Equals(LengthOf(Line(L, P)), 2)",
        "Find(LengthOf(Line(M, L)))"
    ],
    "point_instances": [
        "K",
        "S",
        "J",
        "P",
        "Q",
        "L",
        "H",
        "R",
        "M"
    ],
    "line_instances": [
        "HS",
        "JR",
        "KQ",
        "LP",
        "SR",
        "SQ",
        "SP",
        "SM",
        "RQ",
        "RP",
        "RM",
        "QP",
        "QM",
        "PM",
        "HJ",
        "HK",
        "HL",
        "HM",
        "JK",
        "JL",
        "JM",
        "KL",
        "KM",
        "LM"
    ],
    "circle_instances": [],
    "point_positions": {
        "K": [
            458.4269662921348,
            179.4943820224719
        ],
        "S": [
            103.37078651685393,
            302.5280898876404
        ],
        "J": [
            354.4943820224719,
            132.86516853932585
        ],
        "P": [
            574.1573033707865,
            301.96629213483146
        ],
        "Q": [
            400.56179775280896,
            302.5280898876404
        ],
        "L": [
            597.1910112359551,
            242.97752808988764
        ],
        "H": [
            233.7078651685393,
            79.49438202247191
        ],
        "R": [
            272.4719101123595,
            302.5280898876404
        ],
        "M": [
            729.2134831460675,
            302.5280898876404
        ]
    },
    "problem_choices": [
        "2",
        "3",
        "4",
        "6"
    ],
    "choices_precise_value": [
        2.0,
        3.0,
        4.0,
        6.0
    ],
    "problem_answer": 2.0,
    "total_time": 308.808113,
    "solution_predicate": "Equals(2.0, LengthOf(Line(M, L)))",
    "proof": "Step 1:\nTheorem: Known facts\nPremises : start\nConclusions: KQ || LP, 3 = MP, 4 = KL, L on HM, K on HM, L on KM, \u2220PMH, \u2220QMH, P on MQ, 6 = PQ\n\nStep 2:\nTheorem: Corresponding Angle Theorem\nPremises : KQ || LP\nConclusions: \u2220MPL = \u2220MQK, \u2220MKQ = \u2220MLP\n\nStep 3:\nTheorem: Line Segment Split\nPremises : L on KM\nConclusions: KM = KL + LM\n\nStep 4:\nTheorem: Same Angle\nPremises : L on HM, \u2220PMH\nConclusions: \u2220PMH = \u2220PML\n\nStep 5:\nTheorem: Same Angle\nPremises : \u2220QMH, K on HM\nConclusions: \u2220QMH = \u2220QMK\n\nStep 6:\nTheorem: Same Angle\nPremises : \u2220QMH, P on MQ\nConclusions: \u2220PMH = \u2220QMH\n\nStep 7:\nTheorem: Line Segment Split\nPremises : P on MQ\nConclusions: MQ = MP + PQ\n\nStep 8:\nTheorem: Evaluate\nPremises : 6 = PQ, 3 = MP\nConclusions: 9 = MP + PQ\n\nStep 9:\nTheorem: Transtivity of Equivalence\nPremises : \u2220PMH = \u2220QMH, \u2220PMH = \u2220PML\nConclusions: \u2220PML = \u2220QMH\n\nStep 10:\nTheorem: Transtivity of Equivalence\nPremises : MQ = MP + PQ, 9 = MP + PQ\nConclusions: 9 = MQ\n\nStep 11:\nTheorem: Transtivity of Equivalence\nPremises : \u2220PML = \u2220QMH, \u2220QMH = \u2220QMK\nConclusions: \u2220PML = \u2220QMK\n\nStep 12:\nTheorem: Evaluate\nPremises : 3 = MP, 9 = MQ\nConclusions: 3 = MQ / MP\n\nStep 13:\nTheorem: Angle-Angle Similarity Theorem\nPremises : \u2220MPL = \u2220MQK, \u2220PML = \u2220QMK, \u2220MKQ = \u2220MLP\nConclusions: \u25b3KMQ ~ \u25b3LMP\n\nStep 14:\nTheorem: Similar Definition\nPremises : \u25b3KMQ ~ \u25b3LMP\nConclusions: sim_ratio_triangle_k_m_q_triangle_l_m_p = MQ / MP, \u2220MKQ = \u2220MLP, \u2220MPL = \u2220MQK, sim_ratio_triangle_k_m_q_triangle_l_m_p = KM / LM\n\nStep 15:\nTheorem: Transtivity of Equivalence\nPremises : sim_ratio_triangle_k_m_q_triangle_l_m_p = MQ / MP, 3 = MQ / MP\nConclusions: 3 = sim_ratio_triangle_k_m_q_triangle_l_m_p\n\nStep 16:\nTheorem: Transtivity of Equivalence\nPremises : sim_ratio_triangle_k_m_q_triangle_l_m_p = KM / LM, 3 = sim_ratio_triangle_k_m_q_triangle_l_m_p\nConclusions: 3 = KM / LM\n\nStep 17:\nTheorem: Solve Linear Equation System\nPremises : 3 = KM / LM, 4 = KL, KM = KL + LM\nConclusions: 2 = LM\n\n",
    "logic_fomrs_refined": [
        "Line(H, S)",
        "Line(J, R)",
        "Line(K, Q)",
        "Line(L, P)",
        "Line(S, R)",
        "Line(S, Q)",
        "Line(S, P)",
        "Line(S, M)",
        "Line(R, Q)",
        "Line(R, P)",
        "Line(R, M)",
        "Line(Q, P)",
        "Line(Q, M)",
        "Line(P, M)",
        "Line(H, J)",
        "Line(H, K)",
        "Line(H, L)",
        "Line(H, M)",
        "Line(J, K)",
        "Line(J, L)",
        "Line(J, M)",
        "Line(K, L)",
        "Line(K, M)",
        "Line(L, M)",
        "PointLiesOnLine(R, Line(S, Q))",
        "PointLiesOnLine(R, Line(S, P))",
        "PointLiesOnLine(R, Line(S, M))",
        "PointLiesOnLine(Q, Line(S, P))",
        "PointLiesOnLine(Q, Line(S, M))",
        "PointLiesOnLine(Q, Line(R, P))",
        "PointLiesOnLine(Q, Line(R, M))",
        "PointLiesOnLine(P, Line(S, M))",
        "PointLiesOnLine(P, Line(R, M))",
        "PointLiesOnLine(P, Line(Q, M))",
        "PointLiesOnLine(J, Line(H, K))",
        "PointLiesOnLine(J, Line(H, L))",
        "PointLiesOnLine(J, Line(H, M))",
        "PointLiesOnLine(K, Line(H, L))",
        "PointLiesOnLine(K, Line(H, M))",
        "PointLiesOnLine(K, Line(J, L))",
        "PointLiesOnLine(K, Line(J, M))",
        "PointLiesOnLine(L, Line(H, M))",
        "PointLiesOnLine(L, Line(J, M))",
        "PointLiesOnLine(L, Line(K, M))",
        "Parallel(Line(H, S), Line(L, P))",
        "Parallel(Line(H, S), Line(K, Q))",
        "Parallel(Line(H, S), Line(J, R))",
        "Parallel(Line(L, P), Line(K, Q))",
        "Parallel(Line(L, P), Line(J, R))",
        "Parallel(Line(K, Q), Line(J, R))",
        "Equals(LengthOf(Line(L, K)), 4.0)",
        "Equals(LengthOf(Line(M, P)), 3.0)",
        "Equals(LengthOf(Line(P, Q)), 6.0)",
        "Equals(LengthOf(Line(K, J)), 2.0)",
        "Equals(LengthOf(Line(R, S)), 6.0)",
        "Equals(LengthOf(Line(L, P)), 2.0)"
    ],
    "correct": true
}