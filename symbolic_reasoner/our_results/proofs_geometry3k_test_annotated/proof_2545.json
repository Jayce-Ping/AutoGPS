{
    "problem_id": "2545",
    "solved": true,
    "problem_text": "Find the area of the shaded region. Round to the nearest tenth.",
    "logic_forms": [
        "PointLiesOnLine(G, Line(A, B))",
        "PointLiesOnLine(G, Line(A, H))",
        "PointLiesOnLine(G, Line(A, F))",
        "PointLiesOnLine(G, Line(A, C))",
        "PointLiesOnLine(G, Line(A, E))",
        "PointLiesOnLine(G, Line(A, D))",
        "PointLiesOnLine(B, Line(A, H))",
        "PointLiesOnLine(B, Line(A, F))",
        "PointLiesOnLine(B, Line(A, C))",
        "PointLiesOnLine(B, Line(A, E))",
        "PointLiesOnLine(B, Line(A, D))",
        "PointLiesOnLine(B, Line(G, H))",
        "PointLiesOnLine(B, Line(G, F))",
        "PointLiesOnLine(B, Line(G, C))",
        "PointLiesOnLine(B, Line(G, E))",
        "PointLiesOnLine(B, Line(G, D))",
        "PointLiesOnLine(C, Line(A, E))",
        "PointLiesOnLine(C, Line(A, D))",
        "PointLiesOnLine(C, Line(G, E))",
        "PointLiesOnLine(C, Line(B, E))",
        "PointLiesOnLine(C, Line(F, E))",
        "PointLiesOnLine(C, Line(H, E))",
        "PointLiesOnLine(E, Line(A, D))",
        "PointLiesOnLine(E, Line(G, D))",
        "PointLiesOnLine(E, Line(B, D))",
        "PointLiesOnLine(E, Line(F, D))",
        "PointLiesOnLine(E, Line(H, D))",
        "PointLiesOnLine(E, Line(C, D))",
        "PointLiesOnLine(F, Line(A, D))",
        "PointLiesOnLine(F, Line(A, E))",
        "PointLiesOnLine(F, Line(G, D))",
        "PointLiesOnLine(F, Line(G, E))",
        "PointLiesOnLine(F, Line(B, D))",
        "PointLiesOnLine(F, Line(B, E))",
        "PointLiesOnLine(G, Line(A, D))",
        "PointLiesOnLine(G, Line(A, E))",
        "PointLiesOnLine(G, Line(A, C))",
        "PointLiesOnLine(G, Line(A, H))",
        "PointLiesOnLine(G, Line(A, F))",
        "PointLiesOnLine(G, Line(A, B))",
        "PointLiesOnLine(H, Line(A, D))",
        "PointLiesOnLine(H, Line(A, E))",
        "PointLiesOnLine(H, Line(G, D))",
        "PointLiesOnLine(H, Line(G, E))",
        "PointLiesOnLine(H, Line(B, D))",
        "PointLiesOnLine(H, Line(B, E))",
        "PointLiesOnCircle(C, Circle(E, radius_0_0))",
        "PointLiesOnCircle(D, Circle(E, radius_0_0))",
        "PointLiesOnCircle(B, Circle(F, radius_1_0))",
        "PointLiesOnCircle(C, Circle(F, radius_1_0))",
        "PointLiesOnCircle(A, Circle(G, radius_2_0))",
        "PointLiesOnCircle(B, Circle(G, radius_2_0))",
        "PointLiesOnCircle(A, Circle(H, radius_3_0))",
        "PointLiesOnCircle(D, Circle(H, radius_3_0))",
        "Equals(LengthOf(Line(A, D)), 15)",
        "Equals(RadiusOf(Circle(G)), RadiusOf(Circle(F)))",
        "Equals(RadiusOf(Circle(G)), RadiusOf(Circle(E)))",
        "Equals(RadiusOf(Circle(F)), RadiusOf(Circle(E)))",
        "Equals(Add(DiameterOf(Circle(F)), DiameterOf(Circle(E)), DiameterOf(Circle(G))), LengthOf(Line(A, D)))",
        "Find(HalfOf(Sub(AreaOf(Circle(H, radius_3_0)), Add(AreaOf(Circle(G, radius_2_0)), AreaOf(Circle(F, radius_1_0)), AreaOf(Circle(E, radius_0_0))))))"
    ],
    "point_instances": [
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G",
        "H"
    ],
    "line_instances": [
        "AB",
        "AC",
        "AD",
        "BC",
        "BD",
        "CD"
    ],
    "circle_instances": [
        "E",
        "F",
        "G",
        "H"
    ],
    "point_positions": {
        "A": [
            16.52173913043478,
            172.56521739130434
        ],
        "B": [
            126.08695652173913,
            172.56521739130434
        ],
        "C": [
            235.07246376811594,
            173.14492753623188
        ],
        "D": [
            345.7971014492753,
            173.14492753623188
        ],
        "E": [
            290.4347826086957,
            172.27536231884056
        ],
        "F": [
            181.26811594202897,
            172.18115942028987
        ],
        "G": [
            70.72463768115942,
            172.2753623188406
        ],
        "H": [
            181.44927536231884,
            173.14492753623188
        ]
    },
    "problem_choices": [
        "29.5",
        "58.9",
        "147.3",
        "589.0"
    ],
    "choices_precise_value": [
        29.5,
        58.9,
        147.3,
        589.0
    ],
    "problem_answer": 58.9,
    "total_time": 52.721754,
    "solution_predicate": "Equals(58.904862255, Div(Sub(AreaOf(Circle(H, radius_3_0)), Add(AreaOf(Circle(G, radius_2_0)), AreaOf(Circle(F, radius_1_0)), AreaOf(Circle(E, radius_0_0)))), 2.0))",
    "proof": "Step 1:\nTheorem: Known facts\nPremises : start\nConclusions: 2 * radius_0_0 + 2 * radius_1_0 + 2 * radius_2_0 = AD, 3.14 = pi, D on \u2299(H, radius_3_0), H on AD, radius_0_0 = radius_2_0, radius_1_0 = radius_2_0, Area(\u2299(F, radius_1_0)), C on \u2299(F, radius_1_0), 15 = AD, Area(\u2299(E, radius_0_0)), Area(\u2299(G, radius_2_0)), Area(\u2299(H, radius_3_0)), A on \u2299(H, radius_3_0)\n\nStep 2:\nTheorem: Point On Circle Def\nPremises : D on \u2299(H, radius_3_0)\nConclusions: radius_3_0 = DH\n\nStep 3:\nTheorem: Line Segment Split\nPremises : H on AD\nConclusions: AD = AH + DH\n\nStep 4:\nTheorem: Circle Area Formula\nPremises : Area(\u2299(F, radius_1_0))\nConclusions: pi * radius_1_0 ** 2 = Area(\u2299(F, radius_1_0))\n\nStep 5:\nTheorem: Point On Circle Def\nPremises : C on \u2299(F, radius_1_0)\nConclusions: radius_1_0 = CF\n\nStep 6:\nTheorem: Substitution\nPremises : radius_0_0 = radius_2_0, radius_1_0 = radius_2_0, 15 = AD, 2 * radius_0_0 + 2 * radius_1_0 + 2 * radius_2_0 = AD\nConclusions: 15 = 2 * radius_2_0 + 2 * radius_2_0 + 2 * radius_2_0\n\nStep 7:\nTheorem: Circle Area Formula\nPremises : Area(\u2299(E, radius_0_0))\nConclusions: pi * radius_0_0 ** 2 = Area(\u2299(E, radius_0_0))\n\nStep 8:\nTheorem: Circle Area Formula\nPremises : Area(\u2299(G, radius_2_0))\nConclusions: pi * radius_2_0 ** 2 = Area(\u2299(G, radius_2_0))\n\nStep 9:\nTheorem: Circle Area Formula\nPremises : Area(\u2299(H, radius_3_0))\nConclusions: pi * radius_3_0 ** 2 = Area(\u2299(H, radius_3_0))\n\nStep 10:\nTheorem: Point On Circle Def\nPremises : A on \u2299(H, radius_3_0)\nConclusions: radius_3_0 = AH\n\nStep 11:\nTheorem: Transtivity of Equivalence\nPremises : AD = AH + DH, 15 = AD\nConclusions: 15 = AH + DH\n\nStep 12:\nTheorem: Substitution\nPremises : radius_1_0 = radius_2_0, 3.14 = pi, pi * radius_1_0 ** 2 = Area(\u2299(F, radius_1_0))\nConclusions: 3.14 * radius_2_0 ** 2 = Area(\u2299(F, radius_1_0))\n\nStep 13:\nTheorem: Transtivity of Equivalence\nPremises : radius_1_0 = radius_2_0, radius_1_0 = CF\nConclusions: radius_2_0 = CF\n\nStep 14:\nTheorem: Substitution\nPremises : radius_0_0 = radius_2_0, 3.14 = pi, pi * radius_0_0 ** 2 = Area(\u2299(E, radius_0_0))\nConclusions: 3.14 * radius_2_0 ** 2 = Area(\u2299(E, radius_0_0))\n\nStep 15:\nTheorem: Substitution\nPremises : pi * radius_2_0 ** 2 = Area(\u2299(G, radius_2_0)), 3.14 = pi\nConclusions: 3.14 * radius_2_0 ** 2 = Area(\u2299(G, radius_2_0))\n\nStep 16:\nTheorem: Substitution\nPremises : pi * radius_3_0 ** 2 = Area(\u2299(H, radius_3_0)), 3.14 = pi\nConclusions: 3.14 * radius_3_0 ** 2 = Area(\u2299(H, radius_3_0))\n\nStep 17:\nTheorem: Transtivity of Equivalence\nPremises : radius_3_0 = DH, radius_3_0 = AH\nConclusions: AH = DH\n\nStep 18:\nTheorem: Solve Linear Equation System\nPremises : 15 = 2 * radius_2_0 + 2 * radius_2_0 + 2 * radius_2_0, radius_2_0 = CF\nConclusions: 2.5 = CF\n\nStep 19:\nTheorem: Transtivity of Equivalence\nPremises : pi * radius_2_0 ** 2 = Area(\u2299(G, radius_2_0)), 3.14 * radius_2_0 ** 2 = Area(\u2299(G, radius_2_0))\nConclusions: 3.14 * radius_2_0 ** 2 = pi * radius_2_0 ** 2\n\nStep 20:\nTheorem: Transtivity of Equivalence\nPremises : pi * radius_3_0 ** 2 = Area(\u2299(H, radius_3_0)), 3.14 * radius_3_0 ** 2 = Area(\u2299(H, radius_3_0))\nConclusions: 3.14 * radius_3_0 ** 2 = pi * radius_3_0 ** 2\n\nStep 21:\nTheorem: Solve Linear Equation System\nPremises : AH = DH, 15 = AH + DH\nConclusions: 7.5 = DH\n\nStep 22:\nTheorem: Transtivity of Equivalence\nPremises : 2.5 = CF, radius_2_0 = CF\nConclusions: 2.5 = radius_2_0\n\nStep 23:\nTheorem: Transtivity of Equivalence\nPremises : 7.5 = DH, radius_3_0 = DH\nConclusions: 7.5 = radius_3_0\n\nStep 24:\nTheorem: Evaluate\nPremises : 2.5 = radius_2_0, 3.14 = pi\nConclusions: 19.63 = pi * radius_2_0 ** 2\n\nStep 25:\nTheorem: Evaluate\nPremises : 7.5 = radius_3_0, 3.14 = pi\nConclusions: 176.71 = pi * radius_3_0 ** 2\n\nStep 26:\nTheorem: Transtivity of Equivalence\nPremises : 3.14 * radius_2_0 ** 2 = pi * radius_2_0 ** 2, 19.63 = pi * radius_2_0 ** 2\nConclusions: 19.63 = 3.14 * radius_2_0 ** 2\n\nStep 27:\nTheorem: Transtivity of Equivalence\nPremises : 3.14 * radius_3_0 ** 2 = pi * radius_3_0 ** 2, 176.71 = pi * radius_3_0 ** 2\nConclusions: 176.71 = 3.14 * radius_3_0 ** 2\n\nStep 28:\nTheorem: Transtivity of Equivalence\nPremises : 19.63 = 3.14 * radius_2_0 ** 2, 3.14 * radius_2_0 ** 2 = Area(\u2299(G, radius_2_0))\nConclusions: 19.63 = Area(\u2299(G, radius_2_0))\n\nStep 29:\nTheorem: Transtivity of Equivalence\nPremises : 3.14 * radius_2_0 ** 2 = Area(\u2299(F, radius_1_0)), 19.63 = 3.14 * radius_2_0 ** 2\nConclusions: 19.63 = Area(\u2299(F, radius_1_0))\n\nStep 30:\nTheorem: Transtivity of Equivalence\nPremises : 19.63 = 3.14 * radius_2_0 ** 2, 3.14 * radius_2_0 ** 2 = Area(\u2299(E, radius_0_0))\nConclusions: 19.63 = Area(\u2299(E, radius_0_0))\n\nStep 31:\nTheorem: Transtivity of Equivalence\nPremises : 176.71 = 3.14 * radius_3_0 ** 2, 3.14 * radius_3_0 ** 2 = Area(\u2299(H, radius_3_0))\nConclusions: 176.71 = Area(\u2299(H, radius_3_0))\n\nStep 32:\nTheorem: Evaluate\nPremises : 19.63 = Area(\u2299(E, radius_0_0)), 19.63 = Area(\u2299(F, radius_1_0)), 19.63 = Area(\u2299(G, radius_2_0)), 176.71 = Area(\u2299(H, radius_3_0))\nConclusions: 58.9 = (Area(\u2299(H, radius_3_0)) - (Area(\u2299(E, radius_0_0)) + Area(\u2299(F, radius_1_0)) + Area(\u2299(G, radius_2_0)))) / 2\n\n",
    "logic_fomrs_refined": [
        "Line(A, B)",
        "Line(A, C)",
        "Line(A, D)",
        "Line(B, C)",
        "Line(B, D)",
        "Line(C, D)",
        "Circle(G, radius_2_0)",
        "Circle(F, radius_1_0)",
        "Circle(E, radius_0_0)",
        "Circle(H, radius_3_0)",
        "PointLiesOnLine(G, Line(A, B))",
        "PointLiesOnLine(G, Line(A, H))",
        "PointLiesOnLine(G, Line(A, F))",
        "PointLiesOnLine(G, Line(A, C))",
        "PointLiesOnLine(G, Line(A, E))",
        "PointLiesOnLine(G, Line(A, D))",
        "PointLiesOnLine(B, Line(A, H))",
        "PointLiesOnLine(B, Line(A, F))",
        "PointLiesOnLine(B, Line(A, C))",
        "PointLiesOnLine(B, Line(A, E))",
        "PointLiesOnLine(B, Line(A, D))",
        "PointLiesOnLine(B, Line(G, H))",
        "PointLiesOnLine(B, Line(G, F))",
        "PointLiesOnLine(B, Line(G, C))",
        "PointLiesOnLine(B, Line(G, E))",
        "PointLiesOnLine(B, Line(G, D))",
        "PointLiesOnLine(C, Line(A, E))",
        "PointLiesOnLine(C, Line(A, D))",
        "PointLiesOnLine(C, Line(G, E))",
        "PointLiesOnLine(C, Line(B, E))",
        "PointLiesOnLine(C, Line(F, E))",
        "PointLiesOnLine(C, Line(H, E))",
        "PointLiesOnLine(E, Line(A, D))",
        "PointLiesOnLine(E, Line(G, D))",
        "PointLiesOnLine(E, Line(B, D))",
        "PointLiesOnLine(E, Line(F, D))",
        "PointLiesOnLine(E, Line(H, D))",
        "PointLiesOnLine(E, Line(C, D))",
        "PointLiesOnLine(F, Line(A, D))",
        "PointLiesOnLine(F, Line(A, E))",
        "PointLiesOnLine(F, Line(G, D))",
        "PointLiesOnLine(F, Line(G, E))",
        "PointLiesOnLine(F, Line(B, D))",
        "PointLiesOnLine(F, Line(B, E))",
        "PointLiesOnLine(G, Line(A, D))",
        "PointLiesOnLine(G, Line(A, E))",
        "PointLiesOnLine(G, Line(A, C))",
        "PointLiesOnLine(G, Line(A, H))",
        "PointLiesOnLine(G, Line(A, F))",
        "PointLiesOnLine(G, Line(A, B))",
        "PointLiesOnLine(H, Line(A, D))",
        "PointLiesOnLine(H, Line(A, E))",
        "PointLiesOnLine(H, Line(G, D))",
        "PointLiesOnLine(H, Line(G, E))",
        "PointLiesOnLine(H, Line(B, D))",
        "PointLiesOnLine(H, Line(B, E))",
        "PointLiesOnCircle(C, Circle(E, radius_0_0))",
        "PointLiesOnCircle(D, Circle(E, radius_0_0))",
        "PointLiesOnCircle(B, Circle(F, radius_1_0))",
        "PointLiesOnCircle(C, Circle(F, radius_1_0))",
        "PointLiesOnCircle(A, Circle(G, radius_2_0))",
        "PointLiesOnCircle(B, Circle(G, radius_2_0))",
        "PointLiesOnCircle(A, Circle(H, radius_3_0))",
        "PointLiesOnCircle(D, Circle(H, radius_3_0))",
        "Equals(LengthOf(Line(A, D)), 15.0)",
        "Equals(radius_2_0, radius_1_0)",
        "Equals(radius_2_0, radius_0_0)",
        "Equals(radius_1_0, radius_0_0)",
        "Equals(Add(Mul(2.0, radius_1_0), Mul(2.0, radius_0_0), Mul(2.0, radius_2_0)), LengthOf(Line(A, D)))"
    ],
    "correct": true
}